# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 24.6.0.74
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import extremecloudiq
from extremecloudiq.models.xiq_firmware_metadatas_response import XiqFirmwareMetadatasResponse  # noqa: E501
from extremecloudiq.rest import ApiException

class TestXiqFirmwareMetadatasResponse(unittest.TestCase):
    """XiqFirmwareMetadatasResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test XiqFirmwareMetadatasResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = extremecloudiq.models.xiq_firmware_metadatas_response.XiqFirmwareMetadatasResponse()  # noqa: E501
        if include_optional :
            return XiqFirmwareMetadatasResponse(
                firmware_metadatas = {
                    'key' : [
                        extremecloudiq.models.xiq_device_firmware_metadata.XiqDeviceFirmwareMetadata(
                            firmware_id = 56, 
                            create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            firmware_name = '0', 
                            firmware_type = '0', 
                            scope = '0', 
                            version = '0', 
                            date = '0', 
                            firmware_size = '0', 
                            display_version = '0', 
                            supported_platforms = '0', 
                            md5 = '0', )
                        ]
                    }
            )
        else :
            return XiqFirmwareMetadatasResponse(
        )

    def testXiqFirmwareMetadatasResponse(self):
        """Test XiqFirmwareMetadatasResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
