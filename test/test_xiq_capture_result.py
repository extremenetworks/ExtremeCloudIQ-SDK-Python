# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 23.6.0.46
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import extremecloudiq
from extremecloudiq.models.xiq_capture_result import XiqCaptureResult  # noqa: E501
from extremecloudiq.rest import ApiException

class TestXiqCaptureResult(unittest.TestCase):
    """XiqCaptureResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test XiqCaptureResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = extremecloudiq.models.xiq_capture_result.XiqCaptureResult()  # noqa: E501
        if include_optional :
            return XiqCaptureResult(
                id = 56, 
                org_id = 56, 
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                device_id = 56, 
                hostname = '0', 
                mac_address = '0', 
                interface_name = '0', 
                location_id = 56, 
                locations = [
                    extremecloudiq.models.xiq_location_legend.XiqLocationLegend(
                        id = 56, 
                        name = '0', )
                    ], 
                status = 'INITIAL', 
                error_message = '0', 
                storage = extremecloudiq.models.xiq_storage.XiqStorage(
                    cloud_storage = '0', 
                    cloud_shark_storage = extremecloudiq.models.xiq_cloud_shark_storage.XiqCloudSharkStorage(
                        file_name = '0', 
                        file_url = '0', ), )
            )
        else :
            return XiqCaptureResult(
        )

    def testXiqCaptureResult(self):
        """Test XiqCaptureResult"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
