# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 24.3.1.2
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import extremecloudiq
from extremecloudiq.models.xiq_viq_export_import_status_response import XiqViqExportImportStatusResponse  # noqa: E501
from extremecloudiq.rest import ApiException

class TestXiqViqExportImportStatusResponse(unittest.TestCase):
    """XiqViqExportImportStatusResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test XiqViqExportImportStatusResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = extremecloudiq.models.xiq_viq_export_import_status_response.XiqViqExportImportStatusResponse()  # noqa: E501
        if include_optional :
            return XiqViqExportImportStatusResponse(
                user_name = '0', 
                vhm_id = '0', 
                operation = '0', 
                status = '0', 
                total_finish_percentage = 56, 
                viq_task_progresses = [
                    extremecloudiq.models.xiq_viq_task_progress.XiqViqTaskProgress(
                        task_name = '0', 
                        finish_percentage = 56, 
                        detail = '0', 
                        status = '0', )
                    ]
            )
        else :
            return XiqViqExportImportStatusResponse(
        )

    def testXiqViqExportImportStatusResponse(self):
        """Test XiqViqExportImportStatusResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
