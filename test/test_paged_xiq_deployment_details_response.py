# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 24.6.0.74
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import extremecloudiq
from extremecloudiq.models.paged_xiq_deployment_details_response import PagedXiqDeploymentDetailsResponse  # noqa: E501
from extremecloudiq.rest import ApiException

class TestPagedXiqDeploymentDetailsResponse(unittest.TestCase):
    """PagedXiqDeploymentDetailsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PagedXiqDeploymentDetailsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = extremecloudiq.models.paged_xiq_deployment_details_response.PagedXiqDeploymentDetailsResponse()  # noqa: E501
        if include_optional :
            return PagedXiqDeploymentDetailsResponse(
                page = 56, 
                count = 56, 
                total_pages = 56, 
                total_count = 56, 
                data = [
                    extremecloudiq.models.xiq_deployment_details_response.XiqDeploymentDetailsResponse(
                        deployment_id = 56, 
                        schedule = extremecloudiq.models.xiq_schedule_details.XiqScheduleDetails(
                            start_time = 56, ), 
                        devices = extremecloudiq.models.xiq_devices.XiqDevices(
                            ids = [
                                56
                                ], 
                            site_ids = [
                                56
                                ], ), 
                        policy = extremecloudiq.models.xiq_deployments_policy_response.XiqDeploymentsPolicyResponse(
                            enable_complete_configuration_update = True, 
                            firmware_upgrade_policy = extremecloudiq.models.xiq_firmware_upgrade_policy.XiqFirmwareUpgradePolicy(
                                enable_enforce_upgrade = True, 
                                enable_distributed_upgrade = True, ), 
                            firmware_upgrade_versions = [
                                extremecloudiq.models.xiq_firmware_upgrade_version.XiqFirmwareUpgradeVersion(
                                    firmware_id = 56, 
                                    device_id = 56, 
                                    product_type = '0', )
                                ], 
                            firmware_activate_option = extremecloudiq.models.xiq_firmware_activate_option.XiqFirmwareActivateOption(
                                enable_activate_at_next_reboot = True, 
                                activation_delay_seconds = 56, 
                                activation_time = 56, ), ), 
                        schedule_status = 'SCHEDULED', 
                        overview = extremecloudiq.models.xiq_deployment_overview_details.XiqDeploymentOverviewDetails(
                            total_devices = 56, 
                            in_progress_devices = 56, 
                            total_progress = 56, ), )
                    ]
            )
        else :
            return PagedXiqDeploymentDetailsResponse(
                page = 56,
                count = 56,
                total_pages = 56,
                total_count = 56,
        )

    def testPagedXiqDeploymentDetailsResponse(self):
        """Test PagedXiqDeploymentDetailsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
