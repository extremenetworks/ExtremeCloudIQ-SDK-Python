# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 24.3.1.2
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import extremecloudiq
from extremecloudiq.models.xiq_l3_address_profile_response import XiqL3AddressProfileResponse  # noqa: E501
from extremecloudiq.rest import ApiException

class TestXiqL3AddressProfileResponse(unittest.TestCase):
    """XiqL3AddressProfileResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test XiqL3AddressProfileResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = extremecloudiq.models.xiq_l3_address_profile_response.XiqL3AddressProfileResponse()  # noqa: E501
        if include_optional :
            return XiqL3AddressProfileResponse(
                ip_address_profile = extremecloudiq.models.xiq_ip_address_profile.XiqIpAddressProfile(
                    id = 56, 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    org_id = 56, 
                    predefined = True, 
                    name = '0', 
                    description = '0', 
                    value = '0', 
                    enable_classification = True, 
                    address_type = 'IP_ADDRESS', 
                    classified_entries = [
                        extremecloudiq.models.xiq_address_profile_classified_entry.XiqAddressProfileClassifiedEntry(
                            class_asgn_id = 56, 
                            value = '0', 
                            description = '0', 
                            netmask = '0', 
                            ip_address_end = '0', 
                            wildcard_mask = '0', )
                        ], ), 
                wildcard_address_profile = extremecloudiq.models.xiq_wildcard_address_profile.XiqWildcardAddressProfile(
                    id = 56, 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    org_id = 56, 
                    predefined = True, 
                    name = '0', 
                    description = '0', 
                    value = '0', 
                    enable_classification = True, 
                    address_type = 'IP_ADDRESS', 
                    classified_entries = [
                        extremecloudiq.models.xiq_address_profile_classified_entry.XiqAddressProfileClassifiedEntry(
                            class_asgn_id = 56, 
                            value = '0', 
                            description = '0', 
                            netmask = '0', 
                            ip_address_end = '0', 
                            wildcard_mask = '0', )
                        ], 
                    wildcard_mask = '0', ), 
                wildcard_host_name_address_profile = extremecloudiq.models.xiq_wildcard_host_name_address_profile.XiqWildcardHostNameAddressProfile(
                    id = 56, 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    org_id = 56, 
                    predefined = True, 
                    name = '0', 
                    description = '0', 
                    value = '0', 
                    enable_classification = True, 
                    address_type = 'IP_ADDRESS', 
                    classified_entries = [
                        extremecloudiq.models.xiq_address_profile_classified_entry.XiqAddressProfileClassifiedEntry(
                            class_asgn_id = 56, 
                            value = '0', 
                            description = '0', 
                            netmask = '0', 
                            ip_address_end = '0', 
                            wildcard_mask = '0', )
                        ], ), 
                subnet_address_profile = extremecloudiq.models.xiq_subnet_address_profile.XiqSubnetAddressProfile(
                    id = 56, 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    org_id = 56, 
                    predefined = True, 
                    name = '0', 
                    description = '0', 
                    value = '0', 
                    enable_classification = True, 
                    address_type = 'IP_ADDRESS', 
                    classified_entries = [
                        extremecloudiq.models.xiq_address_profile_classified_entry.XiqAddressProfileClassifiedEntry(
                            class_asgn_id = 56, 
                            value = '0', 
                            description = '0', 
                            netmask = '0', 
                            ip_address_end = '0', 
                            wildcard_mask = '0', )
                        ], 
                    netmask = '0', ), 
                ip_range_address_profile = extremecloudiq.models.xiq_ip_range_address_profile.XiqIpRangeAddressProfile(
                    id = 56, 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    org_id = 56, 
                    predefined = True, 
                    name = '0', 
                    description = '0', 
                    value = '0', 
                    enable_classification = True, 
                    address_type = 'IP_ADDRESS', 
                    classified_entries = [
                        extremecloudiq.models.xiq_address_profile_classified_entry.XiqAddressProfileClassifiedEntry(
                            class_asgn_id = 56, 
                            value = '0', 
                            description = '0', 
                            netmask = '0', 
                            ip_address_end = '0', 
                            wildcard_mask = '0', )
                        ], 
                    ip_address_end = '0', ), 
                host_name_address_profile = extremecloudiq.models.xiq_host_name_address_profile.XiqHostNameAddressProfile(
                    id = 56, 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    org_id = 56, 
                    predefined = True, 
                    name = '0', 
                    description = '0', 
                    value = '0', 
                    enable_classification = True, 
                    address_type = 'IP_ADDRESS', 
                    classified_entries = [
                        extremecloudiq.models.xiq_address_profile_classified_entry.XiqAddressProfileClassifiedEntry(
                            class_asgn_id = 56, 
                            value = '0', 
                            description = '0', 
                            netmask = '0', 
                            ip_address_end = '0', 
                            wildcard_mask = '0', )
                        ], )
            )
        else :
            return XiqL3AddressProfileResponse(
        )

    def testXiqL3AddressProfileResponse(self):
        """Test XiqL3AddressProfileResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
