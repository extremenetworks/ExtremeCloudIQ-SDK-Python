# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 23.6.0.46
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import extremecloudiq
from extremecloudiq.models.paged_xiq_alert import PagedXiqAlert  # noqa: E501
from extremecloudiq.rest import ApiException

class TestPagedXiqAlert(unittest.TestCase):
    """PagedXiqAlert unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PagedXiqAlert
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = extremecloudiq.models.paged_xiq_alert.PagedXiqAlert()  # noqa: E501
        if include_optional :
            return PagedXiqAlert(
                page = 56, 
                count = 56, 
                total_pages = 56, 
                total_count = 56, 
                data = [
                    extremecloudiq.models.xiq_alert.XiqAlert(
                        id = '0', 
                        owner_id = 56, 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        org_id = 56, 
                        type = '0', 
                        summary = '0', 
                        severity = 'CRITICAL', 
                        category = 'DEVICE', 
                        source = extremecloudiq.models.xiq_alert_source.XiqAlertSource(
                            source_name = '0', 
                            source_type = 'DEVICE', 
                            source_id = '0', ), 
                        tags = {
                            'key' : '0'
                            }, )
                    ]
            )
        else :
            return PagedXiqAlert(
                page = 56,
                count = 56,
                total_pages = 56,
                total_count = 56,
        )

    def testPagedXiqAlert(self):
        """Test PagedXiqAlert"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
