# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 23.6.0.46
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from extremecloudiq.configuration import Configuration


class XiqWifiEfficiencyStatsResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'total_client_sessions': 'int',
        'show_tx_data': 'bool',
        'sessions_data': 'list[XiqSessionsDataEntity]'
    }

    attribute_map = {
        'total_client_sessions': 'total_client_sessions',
        'show_tx_data': 'show_tx_data',
        'sessions_data': 'sessions_data'
    }

    def __init__(self, total_client_sessions=None, show_tx_data=None, sessions_data=None, local_vars_configuration=None):  # noqa: E501
        """XiqWifiEfficiencyStatsResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._total_client_sessions = None
        self._show_tx_data = None
        self._sessions_data = None
        self.discriminator = None

        if total_client_sessions is not None:
            self.total_client_sessions = total_client_sessions
        if show_tx_data is not None:
            self.show_tx_data = show_tx_data
        if sessions_data is not None:
            self.sessions_data = sessions_data

    @property
    def total_client_sessions(self):
        """Gets the total_client_sessions of this XiqWifiEfficiencyStatsResponse.  # noqa: E501

        The total client sessions  # noqa: E501

        :return: The total_client_sessions of this XiqWifiEfficiencyStatsResponse.  # noqa: E501
        :rtype: int
        """
        return self._total_client_sessions

    @total_client_sessions.setter
    def total_client_sessions(self, total_client_sessions):
        """Sets the total_client_sessions of this XiqWifiEfficiencyStatsResponse.

        The total client sessions  # noqa: E501

        :param total_client_sessions: The total_client_sessions of this XiqWifiEfficiencyStatsResponse.  # noqa: E501
        :type: int
        """

        self._total_client_sessions = total_client_sessions

    @property
    def show_tx_data(self):
        """Gets the show_tx_data of this XiqWifiEfficiencyStatsResponse.  # noqa: E501

        The show tx data  # noqa: E501

        :return: The show_tx_data of this XiqWifiEfficiencyStatsResponse.  # noqa: E501
        :rtype: bool
        """
        return self._show_tx_data

    @show_tx_data.setter
    def show_tx_data(self, show_tx_data):
        """Sets the show_tx_data of this XiqWifiEfficiencyStatsResponse.

        The show tx data  # noqa: E501

        :param show_tx_data: The show_tx_data of this XiqWifiEfficiencyStatsResponse.  # noqa: E501
        :type: bool
        """

        self._show_tx_data = show_tx_data

    @property
    def sessions_data(self):
        """Gets the sessions_data of this XiqWifiEfficiencyStatsResponse.  # noqa: E501

        The sessions data  # noqa: E501

        :return: The sessions_data of this XiqWifiEfficiencyStatsResponse.  # noqa: E501
        :rtype: list[XiqSessionsDataEntity]
        """
        return self._sessions_data

    @sessions_data.setter
    def sessions_data(self, sessions_data):
        """Sets the sessions_data of this XiqWifiEfficiencyStatsResponse.

        The sessions data  # noqa: E501

        :param sessions_data: The sessions_data of this XiqWifiEfficiencyStatsResponse.  # noqa: E501
        :type: list[XiqSessionsDataEntity]
        """

        self._sessions_data = sessions_data

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, XiqWifiEfficiencyStatsResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, XiqWifiEfficiencyStatsResponse):
            return True

        return self.to_dict() != other.to_dict()
