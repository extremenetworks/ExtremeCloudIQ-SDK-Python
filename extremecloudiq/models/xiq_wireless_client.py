# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 23.7.0.64
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from extremecloudiq.configuration import Configuration


class XiqWirelessClient(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'network_policy_name': 'str',
        'ssid': 'str',
        'ssid_status': 'XiqSsidStatus',
        'ssid_security_type': 'XiqSsidAccessSecurityType'
    }

    attribute_map = {
        'network_policy_name': 'network_policy_name',
        'ssid': 'ssid',
        'ssid_status': 'ssid_status',
        'ssid_security_type': 'ssid_security_type'
    }

    def __init__(self, network_policy_name=None, ssid=None, ssid_status=None, ssid_security_type=None, local_vars_configuration=None):  # noqa: E501
        """XiqWirelessClient - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._network_policy_name = None
        self._ssid = None
        self._ssid_status = None
        self._ssid_security_type = None
        self.discriminator = None

        if network_policy_name is not None:
            self.network_policy_name = network_policy_name
        if ssid is not None:
            self.ssid = ssid
        if ssid_status is not None:
            self.ssid_status = ssid_status
        if ssid_security_type is not None:
            self.ssid_security_type = ssid_security_type

    @property
    def network_policy_name(self):
        """Gets the network_policy_name of this XiqWirelessClient.  # noqa: E501

        The Network Policy Name  # noqa: E501

        :return: The network_policy_name of this XiqWirelessClient.  # noqa: E501
        :rtype: str
        """
        return self._network_policy_name

    @network_policy_name.setter
    def network_policy_name(self, network_policy_name):
        """Sets the network_policy_name of this XiqWirelessClient.

        The Network Policy Name  # noqa: E501

        :param network_policy_name: The network_policy_name of this XiqWirelessClient.  # noqa: E501
        :type: str
        """

        self._network_policy_name = network_policy_name

    @property
    def ssid(self):
        """Gets the ssid of this XiqWirelessClient.  # noqa: E501

        The SSID  # noqa: E501

        :return: The ssid of this XiqWirelessClient.  # noqa: E501
        :rtype: str
        """
        return self._ssid

    @ssid.setter
    def ssid(self, ssid):
        """Sets the ssid of this XiqWirelessClient.

        The SSID  # noqa: E501

        :param ssid: The ssid of this XiqWirelessClient.  # noqa: E501
        :type: str
        """

        self._ssid = ssid

    @property
    def ssid_status(self):
        """Gets the ssid_status of this XiqWirelessClient.  # noqa: E501


        :return: The ssid_status of this XiqWirelessClient.  # noqa: E501
        :rtype: XiqSsidStatus
        """
        return self._ssid_status

    @ssid_status.setter
    def ssid_status(self, ssid_status):
        """Sets the ssid_status of this XiqWirelessClient.


        :param ssid_status: The ssid_status of this XiqWirelessClient.  # noqa: E501
        :type: XiqSsidStatus
        """

        self._ssid_status = ssid_status

    @property
    def ssid_security_type(self):
        """Gets the ssid_security_type of this XiqWirelessClient.  # noqa: E501


        :return: The ssid_security_type of this XiqWirelessClient.  # noqa: E501
        :rtype: XiqSsidAccessSecurityType
        """
        return self._ssid_security_type

    @ssid_security_type.setter
    def ssid_security_type(self, ssid_security_type):
        """Sets the ssid_security_type of this XiqWirelessClient.


        :param ssid_security_type: The ssid_security_type of this XiqWirelessClient.  # noqa: E501
        :type: XiqSsidAccessSecurityType
        """

        self._ssid_security_type = ssid_security_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, XiqWirelessClient):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, XiqWirelessClient):
            return True

        return self.to_dict() != other.to_dict()
