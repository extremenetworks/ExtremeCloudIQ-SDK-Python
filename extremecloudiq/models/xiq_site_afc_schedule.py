# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 24.6.0.74
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from extremecloudiq.configuration import Configuration


class XiqSiteAfcSchedule(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'owner_id': 'int',
        'folder_id': 'int',
        'site_time_zone': 'str',
        'site_schedule': 'int'
    }

    attribute_map = {
        'owner_id': 'ownerId',
        'folder_id': 'folderId',
        'site_time_zone': 'siteTimeZone',
        'site_schedule': 'siteSchedule'
    }

    def __init__(self, owner_id=None, folder_id=None, site_time_zone=None, site_schedule=None, local_vars_configuration=None):  # noqa: E501
        """XiqSiteAfcSchedule - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._owner_id = None
        self._folder_id = None
        self._site_time_zone = None
        self._site_schedule = None
        self.discriminator = None

        if owner_id is not None:
            self.owner_id = owner_id
        if folder_id is not None:
            self.folder_id = folder_id
        if site_time_zone is not None:
            self.site_time_zone = site_time_zone
        if site_schedule is not None:
            self.site_schedule = site_schedule

    @property
    def owner_id(self):
        """Gets the owner_id of this XiqSiteAfcSchedule.  # noqa: E501


        :return: The owner_id of this XiqSiteAfcSchedule.  # noqa: E501
        :rtype: int
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this XiqSiteAfcSchedule.


        :param owner_id: The owner_id of this XiqSiteAfcSchedule.  # noqa: E501
        :type: int
        """

        self._owner_id = owner_id

    @property
    def folder_id(self):
        """Gets the folder_id of this XiqSiteAfcSchedule.  # noqa: E501


        :return: The folder_id of this XiqSiteAfcSchedule.  # noqa: E501
        :rtype: int
        """
        return self._folder_id

    @folder_id.setter
    def folder_id(self, folder_id):
        """Sets the folder_id of this XiqSiteAfcSchedule.


        :param folder_id: The folder_id of this XiqSiteAfcSchedule.  # noqa: E501
        :type: int
        """

        self._folder_id = folder_id

    @property
    def site_time_zone(self):
        """Gets the site_time_zone of this XiqSiteAfcSchedule.  # noqa: E501


        :return: The site_time_zone of this XiqSiteAfcSchedule.  # noqa: E501
        :rtype: str
        """
        return self._site_time_zone

    @site_time_zone.setter
    def site_time_zone(self, site_time_zone):
        """Sets the site_time_zone of this XiqSiteAfcSchedule.


        :param site_time_zone: The site_time_zone of this XiqSiteAfcSchedule.  # noqa: E501
        :type: str
        """

        self._site_time_zone = site_time_zone

    @property
    def site_schedule(self):
        """Gets the site_schedule of this XiqSiteAfcSchedule.  # noqa: E501


        :return: The site_schedule of this XiqSiteAfcSchedule.  # noqa: E501
        :rtype: int
        """
        return self._site_schedule

    @site_schedule.setter
    def site_schedule(self, site_schedule):
        """Sets the site_schedule of this XiqSiteAfcSchedule.


        :param site_schedule: The site_schedule of this XiqSiteAfcSchedule.  # noqa: E501
        :type: int
        """

        self._site_schedule = site_schedule

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, XiqSiteAfcSchedule):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, XiqSiteAfcSchedule):
            return True

        return self.to_dict() != other.to_dict()
