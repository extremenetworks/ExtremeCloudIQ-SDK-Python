# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 23.6.0.46
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from extremecloudiq.configuration import Configuration


class XiqAnomaliesDeviceUpdateActionRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'anomaly_type': 'XiqAnomalyType',
        'action_type': 'XiqActionType',
        'location_id': 'int',
        'anomaly_id': 'str'
    }

    attribute_map = {
        'anomaly_type': 'anomaly_type',
        'action_type': 'action_type',
        'location_id': 'location_id',
        'anomaly_id': 'anomaly_id'
    }

    def __init__(self, anomaly_type=None, action_type=None, location_id=None, anomaly_id=None, local_vars_configuration=None):  # noqa: E501
        """XiqAnomaliesDeviceUpdateActionRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._anomaly_type = None
        self._action_type = None
        self._location_id = None
        self._anomaly_id = None
        self.discriminator = None

        if anomaly_type is not None:
            self.anomaly_type = anomaly_type
        if action_type is not None:
            self.action_type = action_type
        if location_id is not None:
            self.location_id = location_id
        if anomaly_id is not None:
            self.anomaly_id = anomaly_id

    @property
    def anomaly_type(self):
        """Gets the anomaly_type of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501


        :return: The anomaly_type of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501
        :rtype: XiqAnomalyType
        """
        return self._anomaly_type

    @anomaly_type.setter
    def anomaly_type(self, anomaly_type):
        """Sets the anomaly_type of this XiqAnomaliesDeviceUpdateActionRequest.


        :param anomaly_type: The anomaly_type of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501
        :type: XiqAnomalyType
        """

        self._anomaly_type = anomaly_type

    @property
    def action_type(self):
        """Gets the action_type of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501


        :return: The action_type of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501
        :rtype: XiqActionType
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this XiqAnomaliesDeviceUpdateActionRequest.


        :param action_type: The action_type of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501
        :type: XiqActionType
        """

        self._action_type = action_type

    @property
    def location_id(self):
        """Gets the location_id of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501

        The location id  # noqa: E501

        :return: The location_id of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501
        :rtype: int
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this XiqAnomaliesDeviceUpdateActionRequest.

        The location id  # noqa: E501

        :param location_id: The location_id of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501
        :type: int
        """

        self._location_id = location_id

    @property
    def anomaly_id(self):
        """Gets the anomaly_id of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501

        The anomaly Id  # noqa: E501

        :return: The anomaly_id of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501
        :rtype: str
        """
        return self._anomaly_id

    @anomaly_id.setter
    def anomaly_id(self, anomaly_id):
        """Sets the anomaly_id of this XiqAnomaliesDeviceUpdateActionRequest.

        The anomaly Id  # noqa: E501

        :param anomaly_id: The anomaly_id of this XiqAnomaliesDeviceUpdateActionRequest.  # noqa: E501
        :type: str
        """

        self._anomaly_id = anomaly_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, XiqAnomaliesDeviceUpdateActionRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, XiqAnomaliesDeviceUpdateActionRequest):
            return True

        return self.to_dict() != other.to_dict()
