# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqRmDeviceConnectionStatus(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            total_devices = schemas.Int64Schema
            connected_devices = schemas.Int64Schema
            disconnected_devices = schemas.Int64Schema
            total_managed_devices = schemas.Int64Schema
            connected_managed_devices = schemas.Int64Schema
            disconnected_managed_devices = schemas.Int64Schema
            total_unmanaged_devices = schemas.Int64Schema
            connected_unmanaged_devices = schemas.Int64Schema
            disconnected_unmanaged_devices = schemas.Int64Schema
            __annotations__ = {
                "total_devices": total_devices,
                "connected_devices": connected_devices,
                "disconnected_devices": disconnected_devices,
                "total_managed_devices": total_managed_devices,
                "connected_managed_devices": connected_managed_devices,
                "disconnected_managed_devices": disconnected_managed_devices,
                "total_unmanaged_devices": total_unmanaged_devices,
                "connected_unmanaged_devices": connected_unmanaged_devices,
                "disconnected_unmanaged_devices": disconnected_unmanaged_devices,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_devices"]) -> MetaOapg.properties.total_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connected_devices"]) -> MetaOapg.properties.connected_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["disconnected_devices"]) -> MetaOapg.properties.disconnected_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_managed_devices"]) -> MetaOapg.properties.total_managed_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connected_managed_devices"]) -> MetaOapg.properties.connected_managed_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["disconnected_managed_devices"]) -> MetaOapg.properties.disconnected_managed_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_unmanaged_devices"]) -> MetaOapg.properties.total_unmanaged_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connected_unmanaged_devices"]) -> MetaOapg.properties.connected_unmanaged_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["disconnected_unmanaged_devices"]) -> MetaOapg.properties.disconnected_unmanaged_devices: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["total_devices", "connected_devices", "disconnected_devices", "total_managed_devices", "connected_managed_devices", "disconnected_managed_devices", "total_unmanaged_devices", "connected_unmanaged_devices", "disconnected_unmanaged_devices", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_devices"]) -> typing.Union[MetaOapg.properties.total_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connected_devices"]) -> typing.Union[MetaOapg.properties.connected_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["disconnected_devices"]) -> typing.Union[MetaOapg.properties.disconnected_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_managed_devices"]) -> typing.Union[MetaOapg.properties.total_managed_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connected_managed_devices"]) -> typing.Union[MetaOapg.properties.connected_managed_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["disconnected_managed_devices"]) -> typing.Union[MetaOapg.properties.disconnected_managed_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_unmanaged_devices"]) -> typing.Union[MetaOapg.properties.total_unmanaged_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connected_unmanaged_devices"]) -> typing.Union[MetaOapg.properties.connected_unmanaged_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["disconnected_unmanaged_devices"]) -> typing.Union[MetaOapg.properties.disconnected_unmanaged_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["total_devices", "connected_devices", "disconnected_devices", "total_managed_devices", "connected_managed_devices", "disconnected_managed_devices", "total_unmanaged_devices", "connected_unmanaged_devices", "disconnected_unmanaged_devices", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        total_devices: typing.Union[MetaOapg.properties.total_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        connected_devices: typing.Union[MetaOapg.properties.connected_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        disconnected_devices: typing.Union[MetaOapg.properties.disconnected_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        total_managed_devices: typing.Union[MetaOapg.properties.total_managed_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        connected_managed_devices: typing.Union[MetaOapg.properties.connected_managed_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        disconnected_managed_devices: typing.Union[MetaOapg.properties.disconnected_managed_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        total_unmanaged_devices: typing.Union[MetaOapg.properties.total_unmanaged_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        connected_unmanaged_devices: typing.Union[MetaOapg.properties.connected_unmanaged_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        disconnected_unmanaged_devices: typing.Union[MetaOapg.properties.disconnected_unmanaged_devices, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqRmDeviceConnectionStatus':
        return super().__new__(
            cls,
            *_args,
            total_devices=total_devices,
            connected_devices=connected_devices,
            disconnected_devices=disconnected_devices,
            total_managed_devices=total_managed_devices,
            connected_managed_devices=connected_managed_devices,
            disconnected_managed_devices=disconnected_managed_devices,
            total_unmanaged_devices=total_unmanaged_devices,
            connected_unmanaged_devices=connected_unmanaged_devices,
            disconnected_unmanaged_devices=disconnected_unmanaged_devices,
            _configuration=_configuration,
            **kwargs,
        )
