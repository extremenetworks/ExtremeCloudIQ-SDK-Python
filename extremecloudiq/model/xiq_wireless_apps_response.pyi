# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqWirelessAppsResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Copilot Wireless Apps Response
    """


    class MetaOapg:
        
        class properties:
            total_clients = schemas.Int32Schema
            most_active_app = schemas.StrSchema
            most_active_user = schemas.StrSchema
            total_apps = schemas.Int32Schema
            total_users = schemas.Int32Schema
            __annotations__ = {
                "total_clients": total_clients,
                "most_active_app": most_active_app,
                "most_active_user": most_active_user,
                "total_apps": total_apps,
                "total_users": total_users,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_clients"]) -> MetaOapg.properties.total_clients: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["most_active_app"]) -> MetaOapg.properties.most_active_app: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["most_active_user"]) -> MetaOapg.properties.most_active_user: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_apps"]) -> MetaOapg.properties.total_apps: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_users"]) -> MetaOapg.properties.total_users: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["total_clients", "most_active_app", "most_active_user", "total_apps", "total_users", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_clients"]) -> typing.Union[MetaOapg.properties.total_clients, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["most_active_app"]) -> typing.Union[MetaOapg.properties.most_active_app, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["most_active_user"]) -> typing.Union[MetaOapg.properties.most_active_user, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_apps"]) -> typing.Union[MetaOapg.properties.total_apps, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_users"]) -> typing.Union[MetaOapg.properties.total_users, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["total_clients", "most_active_app", "most_active_user", "total_apps", "total_users", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        total_clients: typing.Union[MetaOapg.properties.total_clients, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        most_active_app: typing.Union[MetaOapg.properties.most_active_app, str, schemas.Unset] = schemas.unset,
        most_active_user: typing.Union[MetaOapg.properties.most_active_user, str, schemas.Unset] = schemas.unset,
        total_apps: typing.Union[MetaOapg.properties.total_apps, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        total_users: typing.Union[MetaOapg.properties.total_users, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqWirelessAppsResponse':
        return super().__new__(
            cls,
            *_args,
            total_clients=total_clients,
            most_active_app=most_active_app,
            most_active_user=most_active_user,
            total_apps=total_apps,
            total_users=total_users,
            _configuration=_configuration,
            **kwargs,
        )
