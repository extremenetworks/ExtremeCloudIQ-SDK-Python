# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqValidForTimePeriodSettings(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The settings for Valid For Time Period option or null for other settings.
    """


    class MetaOapg:
        required = {
            "valid_time_period_after",
        }
        
        class properties:
        
            @staticmethod
            def valid_time_period_after() -> typing.Type['XiqValidTimePeriodAfterType']:
                return XiqValidTimePeriodAfterType
        
            @staticmethod
            def after_id_creation_settings() -> typing.Type['XiqValidTimePeriodAfterIdCreation']:
                return XiqValidTimePeriodAfterIdCreation
        
            @staticmethod
            def after_first_login_settings() -> typing.Type['XiqValidTimePeriodAfterFirstLogin']:
                return XiqValidTimePeriodAfterFirstLogin
            __annotations__ = {
                "valid_time_period_after": valid_time_period_after,
                "after_id_creation_settings": after_id_creation_settings,
                "after_first_login_settings": after_first_login_settings,
            }
    
    valid_time_period_after: 'XiqValidTimePeriodAfterType'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["valid_time_period_after"]) -> 'XiqValidTimePeriodAfterType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["after_id_creation_settings"]) -> 'XiqValidTimePeriodAfterIdCreation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["after_first_login_settings"]) -> 'XiqValidTimePeriodAfterFirstLogin': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["valid_time_period_after", "after_id_creation_settings", "after_first_login_settings", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["valid_time_period_after"]) -> 'XiqValidTimePeriodAfterType': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["after_id_creation_settings"]) -> typing.Union['XiqValidTimePeriodAfterIdCreation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["after_first_login_settings"]) -> typing.Union['XiqValidTimePeriodAfterFirstLogin', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["valid_time_period_after", "after_id_creation_settings", "after_first_login_settings", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        valid_time_period_after: 'XiqValidTimePeriodAfterType',
        after_id_creation_settings: typing.Union['XiqValidTimePeriodAfterIdCreation', schemas.Unset] = schemas.unset,
        after_first_login_settings: typing.Union['XiqValidTimePeriodAfterFirstLogin', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqValidForTimePeriodSettings':
        return super().__new__(
            cls,
            *_args,
            valid_time_period_after=valid_time_period_after,
            after_id_creation_settings=after_id_creation_settings,
            after_first_login_settings=after_first_login_settings,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_valid_time_period_after_first_login import XiqValidTimePeriodAfterFirstLogin
from extremecloudiq.model.xiq_valid_time_period_after_id_creation import XiqValidTimePeriodAfterIdCreation
from extremecloudiq.model.xiq_valid_time_period_after_type import XiqValidTimePeriodAfterType
