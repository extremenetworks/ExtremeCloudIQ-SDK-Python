# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqL3AddressProfileResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The response for creating an address profile
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def ip_address_profile() -> typing.Type['XiqIpAddressProfile']:
                return XiqIpAddressProfile
        
            @staticmethod
            def wildcard_address_profile() -> typing.Type['XiqWildcardAddressProfile']:
                return XiqWildcardAddressProfile
        
            @staticmethod
            def wildcard_host_name_address_profile() -> typing.Type['XiqWildcardHostNameAddressProfile']:
                return XiqWildcardHostNameAddressProfile
        
            @staticmethod
            def subnet_address_profile() -> typing.Type['XiqSubnetAddressProfile']:
                return XiqSubnetAddressProfile
        
            @staticmethod
            def ip_range_address_profile() -> typing.Type['XiqIpRangeAddressProfile']:
                return XiqIpRangeAddressProfile
        
            @staticmethod
            def host_name_address_profile() -> typing.Type['XiqHostNameAddressProfile']:
                return XiqHostNameAddressProfile
            __annotations__ = {
                "ip_address_profile": ip_address_profile,
                "wildcard_address_profile": wildcard_address_profile,
                "wildcard_host_name_address_profile": wildcard_host_name_address_profile,
                "subnet_address_profile": subnet_address_profile,
                "ip_range_address_profile": ip_range_address_profile,
                "host_name_address_profile": host_name_address_profile,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ip_address_profile"]) -> 'XiqIpAddressProfile': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wildcard_address_profile"]) -> 'XiqWildcardAddressProfile': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wildcard_host_name_address_profile"]) -> 'XiqWildcardHostNameAddressProfile': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subnet_address_profile"]) -> 'XiqSubnetAddressProfile': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ip_range_address_profile"]) -> 'XiqIpRangeAddressProfile': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["host_name_address_profile"]) -> 'XiqHostNameAddressProfile': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["ip_address_profile", "wildcard_address_profile", "wildcard_host_name_address_profile", "subnet_address_profile", "ip_range_address_profile", "host_name_address_profile", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ip_address_profile"]) -> typing.Union['XiqIpAddressProfile', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wildcard_address_profile"]) -> typing.Union['XiqWildcardAddressProfile', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wildcard_host_name_address_profile"]) -> typing.Union['XiqWildcardHostNameAddressProfile', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subnet_address_profile"]) -> typing.Union['XiqSubnetAddressProfile', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ip_range_address_profile"]) -> typing.Union['XiqIpRangeAddressProfile', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["host_name_address_profile"]) -> typing.Union['XiqHostNameAddressProfile', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["ip_address_profile", "wildcard_address_profile", "wildcard_host_name_address_profile", "subnet_address_profile", "ip_range_address_profile", "host_name_address_profile", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        ip_address_profile: typing.Union['XiqIpAddressProfile', schemas.Unset] = schemas.unset,
        wildcard_address_profile: typing.Union['XiqWildcardAddressProfile', schemas.Unset] = schemas.unset,
        wildcard_host_name_address_profile: typing.Union['XiqWildcardHostNameAddressProfile', schemas.Unset] = schemas.unset,
        subnet_address_profile: typing.Union['XiqSubnetAddressProfile', schemas.Unset] = schemas.unset,
        ip_range_address_profile: typing.Union['XiqIpRangeAddressProfile', schemas.Unset] = schemas.unset,
        host_name_address_profile: typing.Union['XiqHostNameAddressProfile', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqL3AddressProfileResponse':
        return super().__new__(
            cls,
            *_args,
            ip_address_profile=ip_address_profile,
            wildcard_address_profile=wildcard_address_profile,
            wildcard_host_name_address_profile=wildcard_host_name_address_profile,
            subnet_address_profile=subnet_address_profile,
            ip_range_address_profile=ip_range_address_profile,
            host_name_address_profile=host_name_address_profile,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_host_name_address_profile import XiqHostNameAddressProfile
from extremecloudiq.model.xiq_ip_address_profile import XiqIpAddressProfile
from extremecloudiq.model.xiq_ip_range_address_profile import XiqIpRangeAddressProfile
from extremecloudiq.model.xiq_subnet_address_profile import XiqSubnetAddressProfile
from extremecloudiq.model.xiq_wildcard_address_profile import XiqWildcardAddressProfile
from extremecloudiq.model.xiq_wildcard_host_name_address_profile import XiqWildcardHostNameAddressProfile
