# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqThreadNat64Service(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The nat64 service on border router
    """


    class MetaOapg:
        
        class properties:
            prefix_manager_state = schemas.StrSchema
            translator_state = schemas.StrSchema
            translator_cidr = schemas.StrSchema
            __annotations__ = {
                "prefix_manager_state": prefix_manager_state,
                "translator_state": translator_state,
                "translator_cidr": translator_cidr,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prefix_manager_state"]) -> MetaOapg.properties.prefix_manager_state: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["translator_state"]) -> MetaOapg.properties.translator_state: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["translator_cidr"]) -> MetaOapg.properties.translator_cidr: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["prefix_manager_state", "translator_state", "translator_cidr", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prefix_manager_state"]) -> typing.Union[MetaOapg.properties.prefix_manager_state, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["translator_state"]) -> typing.Union[MetaOapg.properties.translator_state, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["translator_cidr"]) -> typing.Union[MetaOapg.properties.translator_cidr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["prefix_manager_state", "translator_state", "translator_cidr", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        prefix_manager_state: typing.Union[MetaOapg.properties.prefix_manager_state, str, schemas.Unset] = schemas.unset,
        translator_state: typing.Union[MetaOapg.properties.translator_state, str, schemas.Unset] = schemas.unset,
        translator_cidr: typing.Union[MetaOapg.properties.translator_cidr, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqThreadNat64Service':
        return super().__new__(
            cls,
            *_args,
            prefix_manager_state=prefix_manager_state,
            translator_state=translator_state,
            translator_cidr=translator_cidr,
            _configuration=_configuration,
            **kwargs,
        )
