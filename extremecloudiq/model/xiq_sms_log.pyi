# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqSmsLog(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    ExtremeCloud IQ SMS Log
    """


    class MetaOapg:
        required = {
            "id",
        }
        
        class properties:
            id = schemas.Int64Schema
            user_id = schemas.Int64Schema
            customer_id = schemas.StrSchema
            tel = schemas.StrSchema
            profile_name = schemas.StrSchema
        
            @staticmethod
            def status() -> typing.Type['XiqSmsLogStatus']:
                return XiqSmsLogStatus
            message_id = schemas.StrSchema
            status_from_provider = schemas.StrSchema
            provider_type = schemas.StrSchema
            org_id = schemas.Int64Schema
            timestamp = schemas.Int64Schema
            __annotations__ = {
                "id": id,
                "user_id": user_id,
                "customer_id": customer_id,
                "tel": tel,
                "profile_name": profile_name,
                "status": status,
                "message_id": message_id,
                "status_from_provider": status_from_provider,
                "provider_type": provider_type,
                "org_id": org_id,
                "timestamp": timestamp,
            }
    
    id: MetaOapg.properties.id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_id"]) -> MetaOapg.properties.user_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customer_id"]) -> MetaOapg.properties.customer_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tel"]) -> MetaOapg.properties.tel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profile_name"]) -> MetaOapg.properties.profile_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> 'XiqSmsLogStatus': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["message_id"]) -> MetaOapg.properties.message_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status_from_provider"]) -> MetaOapg.properties.status_from_provider: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["provider_type"]) -> MetaOapg.properties.provider_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["org_id"]) -> MetaOapg.properties.org_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "user_id", "customer_id", "tel", "profile_name", "status", "message_id", "status_from_provider", "provider_type", "org_id", "timestamp", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_id"]) -> typing.Union[MetaOapg.properties.user_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customer_id"]) -> typing.Union[MetaOapg.properties.customer_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tel"]) -> typing.Union[MetaOapg.properties.tel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profile_name"]) -> typing.Union[MetaOapg.properties.profile_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union['XiqSmsLogStatus', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["message_id"]) -> typing.Union[MetaOapg.properties.message_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status_from_provider"]) -> typing.Union[MetaOapg.properties.status_from_provider, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["provider_type"]) -> typing.Union[MetaOapg.properties.provider_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["org_id"]) -> typing.Union[MetaOapg.properties.org_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> typing.Union[MetaOapg.properties.timestamp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "user_id", "customer_id", "tel", "profile_name", "status", "message_id", "status_from_provider", "provider_type", "org_id", "timestamp", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, ],
        user_id: typing.Union[MetaOapg.properties.user_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        customer_id: typing.Union[MetaOapg.properties.customer_id, str, schemas.Unset] = schemas.unset,
        tel: typing.Union[MetaOapg.properties.tel, str, schemas.Unset] = schemas.unset,
        profile_name: typing.Union[MetaOapg.properties.profile_name, str, schemas.Unset] = schemas.unset,
        status: typing.Union['XiqSmsLogStatus', schemas.Unset] = schemas.unset,
        message_id: typing.Union[MetaOapg.properties.message_id, str, schemas.Unset] = schemas.unset,
        status_from_provider: typing.Union[MetaOapg.properties.status_from_provider, str, schemas.Unset] = schemas.unset,
        provider_type: typing.Union[MetaOapg.properties.provider_type, str, schemas.Unset] = schemas.unset,
        org_id: typing.Union[MetaOapg.properties.org_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        timestamp: typing.Union[MetaOapg.properties.timestamp, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqSmsLog':
        return super().__new__(
            cls,
            *_args,
            id=id,
            user_id=user_id,
            customer_id=customer_id,
            tel=tel,
            profile_name=profile_name,
            status=status,
            message_id=message_id,
            status_from_provider=status_from_provider,
            provider_type=provider_type,
            org_id=org_id,
            timestamp=timestamp,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_sms_log_status import XiqSmsLogStatus
