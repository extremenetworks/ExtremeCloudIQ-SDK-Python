# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqDeviceMetaData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def xiq_device_data() -> typing.Type['XiqDeviceData']:
                return XiqDeviceData
        
            @staticmethod
            def xiq_device_path() -> typing.Type['XiqDevicePath']:
                return XiqDevicePath
        
            @staticmethod
            def xiq_network_policy() -> typing.Type['XiqNetworkPolicyInfo']:
                return XiqNetworkPolicyInfo
            __annotations__ = {
                "xiq_device_data": xiq_device_data,
                "xiq_device_path": xiq_device_path,
                "xiq_network_policy": xiq_network_policy,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["xiq_device_data"]) -> 'XiqDeviceData': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["xiq_device_path"]) -> 'XiqDevicePath': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["xiq_network_policy"]) -> 'XiqNetworkPolicyInfo': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["xiq_device_data", "xiq_device_path", "xiq_network_policy", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["xiq_device_data"]) -> typing.Union['XiqDeviceData', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["xiq_device_path"]) -> typing.Union['XiqDevicePath', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["xiq_network_policy"]) -> typing.Union['XiqNetworkPolicyInfo', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["xiq_device_data", "xiq_device_path", "xiq_network_policy", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        xiq_device_data: typing.Union['XiqDeviceData', schemas.Unset] = schemas.unset,
        xiq_device_path: typing.Union['XiqDevicePath', schemas.Unset] = schemas.unset,
        xiq_network_policy: typing.Union['XiqNetworkPolicyInfo', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqDeviceMetaData':
        return super().__new__(
            cls,
            *_args,
            xiq_device_data=xiq_device_data,
            xiq_device_path=xiq_device_path,
            xiq_network_policy=xiq_network_policy,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_device_data import XiqDeviceData
from extremecloudiq.model.xiq_device_path import XiqDevicePath
from extremecloudiq.model.xiq_network_policy_info import XiqNetworkPolicyInfo
