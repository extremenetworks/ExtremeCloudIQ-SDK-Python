# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqDeviceIssues(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The device details
    """


    class MetaOapg:
        
        class properties:
            authentication_failures = schemas.Int64Schema
            association_failures = schemas.Int64Schema
            ip_address_issues = schemas.Int64Schema
            excessive_packet_loss_ap_count = schemas.Int64Schema
            excessive_packet_loss_ap_count_5g = schemas.Int64Schema
            excessive_packet_loss_ap_count_6g = schemas.Int64Schema
            total_clients = schemas.Int64Schema
            excessive_packet_loss_ap_count_2dot4g = schemas.Int64Schema
            __annotations__ = {
                "authentication_failures": authentication_failures,
                "association_failures": association_failures,
                "ip_address_issues": ip_address_issues,
                "excessive_packet_loss_ap_count": excessive_packet_loss_ap_count,
                "excessive_packet_loss_ap_count_5g": excessive_packet_loss_ap_count_5g,
                "excessive_packet_loss_ap_count_6g": excessive_packet_loss_ap_count_6g,
                "total_clients": total_clients,
                "excessive_packet_loss_ap_count_2dot4g": excessive_packet_loss_ap_count_2dot4g,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authentication_failures"]) -> MetaOapg.properties.authentication_failures: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["association_failures"]) -> MetaOapg.properties.association_failures: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ip_address_issues"]) -> MetaOapg.properties.ip_address_issues: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["excessive_packet_loss_ap_count"]) -> MetaOapg.properties.excessive_packet_loss_ap_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["excessive_packet_loss_ap_count_5g"]) -> MetaOapg.properties.excessive_packet_loss_ap_count_5g: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["excessive_packet_loss_ap_count_6g"]) -> MetaOapg.properties.excessive_packet_loss_ap_count_6g: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_clients"]) -> MetaOapg.properties.total_clients: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["excessive_packet_loss_ap_count_2dot4g"]) -> MetaOapg.properties.excessive_packet_loss_ap_count_2dot4g: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["authentication_failures", "association_failures", "ip_address_issues", "excessive_packet_loss_ap_count", "excessive_packet_loss_ap_count_5g", "excessive_packet_loss_ap_count_6g", "total_clients", "excessive_packet_loss_ap_count_2dot4g", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authentication_failures"]) -> typing.Union[MetaOapg.properties.authentication_failures, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["association_failures"]) -> typing.Union[MetaOapg.properties.association_failures, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ip_address_issues"]) -> typing.Union[MetaOapg.properties.ip_address_issues, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["excessive_packet_loss_ap_count"]) -> typing.Union[MetaOapg.properties.excessive_packet_loss_ap_count, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["excessive_packet_loss_ap_count_5g"]) -> typing.Union[MetaOapg.properties.excessive_packet_loss_ap_count_5g, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["excessive_packet_loss_ap_count_6g"]) -> typing.Union[MetaOapg.properties.excessive_packet_loss_ap_count_6g, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_clients"]) -> typing.Union[MetaOapg.properties.total_clients, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["excessive_packet_loss_ap_count_2dot4g"]) -> typing.Union[MetaOapg.properties.excessive_packet_loss_ap_count_2dot4g, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["authentication_failures", "association_failures", "ip_address_issues", "excessive_packet_loss_ap_count", "excessive_packet_loss_ap_count_5g", "excessive_packet_loss_ap_count_6g", "total_clients", "excessive_packet_loss_ap_count_2dot4g", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        authentication_failures: typing.Union[MetaOapg.properties.authentication_failures, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        association_failures: typing.Union[MetaOapg.properties.association_failures, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ip_address_issues: typing.Union[MetaOapg.properties.ip_address_issues, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        excessive_packet_loss_ap_count: typing.Union[MetaOapg.properties.excessive_packet_loss_ap_count, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        excessive_packet_loss_ap_count_5g: typing.Union[MetaOapg.properties.excessive_packet_loss_ap_count_5g, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        excessive_packet_loss_ap_count_6g: typing.Union[MetaOapg.properties.excessive_packet_loss_ap_count_6g, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        total_clients: typing.Union[MetaOapg.properties.total_clients, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        excessive_packet_loss_ap_count_2dot4g: typing.Union[MetaOapg.properties.excessive_packet_loss_ap_count_2dot4g, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqDeviceIssues':
        return super().__new__(
            cls,
            *_args,
            authentication_failures=authentication_failures,
            association_failures=association_failures,
            ip_address_issues=ip_address_issues,
            excessive_packet_loss_ap_count=excessive_packet_loss_ap_count,
            excessive_packet_loss_ap_count_5g=excessive_packet_loss_ap_count_5g,
            excessive_packet_loss_ap_count_6g=excessive_packet_loss_ap_count_6g,
            total_clients=total_clients,
            excessive_packet_loss_ap_count_2dot4g=excessive_packet_loss_ap_count_2dot4g,
            _configuration=_configuration,
            **kwargs,
        )
