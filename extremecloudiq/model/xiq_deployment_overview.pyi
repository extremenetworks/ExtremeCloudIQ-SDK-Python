# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqDeploymentOverview(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The configuration deployment overview
    """


    class MetaOapg:
        required = {
            "total_progress",
            "in_progress_devices",
        }
        
        class properties:
            in_progress_devices = schemas.Int32Schema
            total_progress = schemas.Int32Schema
            __annotations__ = {
                "in_progress_devices": in_progress_devices,
                "total_progress": total_progress,
            }
    
    total_progress: MetaOapg.properties.total_progress
    in_progress_devices: MetaOapg.properties.in_progress_devices
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["in_progress_devices"]) -> MetaOapg.properties.in_progress_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_progress"]) -> MetaOapg.properties.total_progress: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["in_progress_devices", "total_progress", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["in_progress_devices"]) -> MetaOapg.properties.in_progress_devices: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_progress"]) -> MetaOapg.properties.total_progress: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["in_progress_devices", "total_progress", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        total_progress: typing.Union[MetaOapg.properties.total_progress, decimal.Decimal, int, ],
        in_progress_devices: typing.Union[MetaOapg.properties.in_progress_devices, decimal.Decimal, int, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqDeploymentOverview':
        return super().__new__(
            cls,
            *_args,
            total_progress=total_progress,
            in_progress_devices=in_progress_devices,
            _configuration=_configuration,
            **kwargs,
        )
