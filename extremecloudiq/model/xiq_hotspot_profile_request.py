# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqHotspotProfileRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "name",
        }
        
        class properties:
            name = schemas.StrSchema
            
            
            class hessid(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    regex=[{
                        'pattern': r'^([0-9a-fA-F]{2}[:]){5}([0-9a-fA-F]{2})$',  # noqa: E501
                    }]
            
            
            class domain_name(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 255
                    min_length = 0
            
            
            class operator_names(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotLocalizedName']:
                        return XiqHotspotLocalizedName
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotLocalizedName'], typing.List['XiqHotspotLocalizedName']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'operator_names':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotLocalizedName':
                    return super().__getitem__(i)
        
            @staticmethod
            def venue() -> typing.Type['XiqHotspotVenue']:
                return XiqHotspotVenue
        
            @staticmethod
            def access_network_type() -> typing.Type['XiqHotspotAccessNetworkType']:
                return XiqHotspotAccessNetworkType
            dgaf = schemas.BoolSchema
        
            @staticmethod
            def ipv4_availability() -> typing.Type['XiqHotspotIpv4AvailabilityType']:
                return XiqHotspotIpv4AvailabilityType
        
            @staticmethod
            def ipv6_availability() -> typing.Type['XiqHotspotIpv6AvailabilityType']:
                return XiqHotspotIpv6AvailabilityType
        
            @staticmethod
            def wan_metrics() -> typing.Type['XiqHotspotWanMetrics']:
                return XiqHotspotWanMetrics
            
            
            class connection_capabilities(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotConnectionCapability']:
                        return XiqHotspotConnectionCapability
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotConnectionCapability'], typing.List['XiqHotspotConnectionCapability']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'connection_capabilities':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotConnectionCapability':
                    return super().__getitem__(i)
        
            @staticmethod
            def qos_map() -> typing.Type['XiqHotspotQosMap']:
                return XiqHotspotQosMap
            
            
            class gas_comeback_delay(
                schemas.Int32Schema
            ):
            
            
                class MetaOapg:
                    format = 'int32'
                    inclusive_maximum = 65535
                    inclusive_minimum = 0
            
            
            class anqp_domain_id(
                schemas.Int32Schema
            ):
            
            
                class MetaOapg:
                    format = 'int32'
                    inclusive_maximum = 65535
                    inclusive_minimum = 0
        
            @staticmethod
            def online_signup() -> typing.Type['XiqHotspotOnlineSignup']:
                return XiqHotspotOnlineSignup
            
            
            class nai_realms(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotNaiRealm']:
                        return XiqHotspotNaiRealm
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotNaiRealm'], typing.List['XiqHotspotNaiRealm']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'nai_realms':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotNaiRealm':
                    return super().__getitem__(i)
            
            
            class roaming_consortiums(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotRoamingConsortium']:
                        return XiqHotspotRoamingConsortium
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotRoamingConsortium'], typing.List['XiqHotspotRoamingConsortium']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'roaming_consortiums':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotRoamingConsortium':
                    return super().__getitem__(i)
            
            
            class cellular_networks(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotCellularNetwork']:
                        return XiqHotspotCellularNetwork
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotCellularNetwork'], typing.List['XiqHotspotCellularNetwork']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'cellular_networks':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotCellularNetwork':
                    return super().__getitem__(i)
            
            
            class service_provider_ids(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.Int64Schema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'service_provider_ids':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            __annotations__ = {
                "name": name,
                "hessid": hessid,
                "domain_name": domain_name,
                "operator_names": operator_names,
                "venue": venue,
                "access_network_type": access_network_type,
                "dgaf": dgaf,
                "ipv4_availability": ipv4_availability,
                "ipv6_availability": ipv6_availability,
                "wan_metrics": wan_metrics,
                "connection_capabilities": connection_capabilities,
                "qos_map": qos_map,
                "gas_comeback_delay": gas_comeback_delay,
                "anqp_domain_id": anqp_domain_id,
                "online_signup": online_signup,
                "nai_realms": nai_realms,
                "roaming_consortiums": roaming_consortiums,
                "cellular_networks": cellular_networks,
                "service_provider_ids": service_provider_ids,
            }
    
    name: MetaOapg.properties.name
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hessid"]) -> MetaOapg.properties.hessid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["domain_name"]) -> MetaOapg.properties.domain_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["operator_names"]) -> MetaOapg.properties.operator_names: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["venue"]) -> 'XiqHotspotVenue': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["access_network_type"]) -> 'XiqHotspotAccessNetworkType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dgaf"]) -> MetaOapg.properties.dgaf: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ipv4_availability"]) -> 'XiqHotspotIpv4AvailabilityType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ipv6_availability"]) -> 'XiqHotspotIpv6AvailabilityType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wan_metrics"]) -> 'XiqHotspotWanMetrics': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connection_capabilities"]) -> MetaOapg.properties.connection_capabilities: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["qos_map"]) -> 'XiqHotspotQosMap': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gas_comeback_delay"]) -> MetaOapg.properties.gas_comeback_delay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["anqp_domain_id"]) -> MetaOapg.properties.anqp_domain_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["online_signup"]) -> 'XiqHotspotOnlineSignup': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nai_realms"]) -> MetaOapg.properties.nai_realms: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["roaming_consortiums"]) -> MetaOapg.properties.roaming_consortiums: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cellular_networks"]) -> MetaOapg.properties.cellular_networks: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["service_provider_ids"]) -> MetaOapg.properties.service_provider_ids: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "hessid", "domain_name", "operator_names", "venue", "access_network_type", "dgaf", "ipv4_availability", "ipv6_availability", "wan_metrics", "connection_capabilities", "qos_map", "gas_comeback_delay", "anqp_domain_id", "online_signup", "nai_realms", "roaming_consortiums", "cellular_networks", "service_provider_ids", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hessid"]) -> typing.Union[MetaOapg.properties.hessid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["domain_name"]) -> typing.Union[MetaOapg.properties.domain_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["operator_names"]) -> typing.Union[MetaOapg.properties.operator_names, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["venue"]) -> typing.Union['XiqHotspotVenue', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["access_network_type"]) -> typing.Union['XiqHotspotAccessNetworkType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dgaf"]) -> typing.Union[MetaOapg.properties.dgaf, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ipv4_availability"]) -> typing.Union['XiqHotspotIpv4AvailabilityType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ipv6_availability"]) -> typing.Union['XiqHotspotIpv6AvailabilityType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wan_metrics"]) -> typing.Union['XiqHotspotWanMetrics', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connection_capabilities"]) -> typing.Union[MetaOapg.properties.connection_capabilities, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["qos_map"]) -> typing.Union['XiqHotspotQosMap', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gas_comeback_delay"]) -> typing.Union[MetaOapg.properties.gas_comeback_delay, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["anqp_domain_id"]) -> typing.Union[MetaOapg.properties.anqp_domain_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["online_signup"]) -> typing.Union['XiqHotspotOnlineSignup', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nai_realms"]) -> typing.Union[MetaOapg.properties.nai_realms, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["roaming_consortiums"]) -> typing.Union[MetaOapg.properties.roaming_consortiums, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cellular_networks"]) -> typing.Union[MetaOapg.properties.cellular_networks, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["service_provider_ids"]) -> typing.Union[MetaOapg.properties.service_provider_ids, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "hessid", "domain_name", "operator_names", "venue", "access_network_type", "dgaf", "ipv4_availability", "ipv6_availability", "wan_metrics", "connection_capabilities", "qos_map", "gas_comeback_delay", "anqp_domain_id", "online_signup", "nai_realms", "roaming_consortiums", "cellular_networks", "service_provider_ids", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        hessid: typing.Union[MetaOapg.properties.hessid, str, schemas.Unset] = schemas.unset,
        domain_name: typing.Union[MetaOapg.properties.domain_name, str, schemas.Unset] = schemas.unset,
        operator_names: typing.Union[MetaOapg.properties.operator_names, list, tuple, schemas.Unset] = schemas.unset,
        venue: typing.Union['XiqHotspotVenue', schemas.Unset] = schemas.unset,
        access_network_type: typing.Union['XiqHotspotAccessNetworkType', schemas.Unset] = schemas.unset,
        dgaf: typing.Union[MetaOapg.properties.dgaf, bool, schemas.Unset] = schemas.unset,
        ipv4_availability: typing.Union['XiqHotspotIpv4AvailabilityType', schemas.Unset] = schemas.unset,
        ipv6_availability: typing.Union['XiqHotspotIpv6AvailabilityType', schemas.Unset] = schemas.unset,
        wan_metrics: typing.Union['XiqHotspotWanMetrics', schemas.Unset] = schemas.unset,
        connection_capabilities: typing.Union[MetaOapg.properties.connection_capabilities, list, tuple, schemas.Unset] = schemas.unset,
        qos_map: typing.Union['XiqHotspotQosMap', schemas.Unset] = schemas.unset,
        gas_comeback_delay: typing.Union[MetaOapg.properties.gas_comeback_delay, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        anqp_domain_id: typing.Union[MetaOapg.properties.anqp_domain_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        online_signup: typing.Union['XiqHotspotOnlineSignup', schemas.Unset] = schemas.unset,
        nai_realms: typing.Union[MetaOapg.properties.nai_realms, list, tuple, schemas.Unset] = schemas.unset,
        roaming_consortiums: typing.Union[MetaOapg.properties.roaming_consortiums, list, tuple, schemas.Unset] = schemas.unset,
        cellular_networks: typing.Union[MetaOapg.properties.cellular_networks, list, tuple, schemas.Unset] = schemas.unset,
        service_provider_ids: typing.Union[MetaOapg.properties.service_provider_ids, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqHotspotProfileRequest':
        return super().__new__(
            cls,
            *_args,
            name=name,
            hessid=hessid,
            domain_name=domain_name,
            operator_names=operator_names,
            venue=venue,
            access_network_type=access_network_type,
            dgaf=dgaf,
            ipv4_availability=ipv4_availability,
            ipv6_availability=ipv6_availability,
            wan_metrics=wan_metrics,
            connection_capabilities=connection_capabilities,
            qos_map=qos_map,
            gas_comeback_delay=gas_comeback_delay,
            anqp_domain_id=anqp_domain_id,
            online_signup=online_signup,
            nai_realms=nai_realms,
            roaming_consortiums=roaming_consortiums,
            cellular_networks=cellular_networks,
            service_provider_ids=service_provider_ids,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_hotspot_access_network_type import XiqHotspotAccessNetworkType
from extremecloudiq.model.xiq_hotspot_cellular_network import XiqHotspotCellularNetwork
from extremecloudiq.model.xiq_hotspot_connection_capability import XiqHotspotConnectionCapability
from extremecloudiq.model.xiq_hotspot_ipv4_availability_type import XiqHotspotIpv4AvailabilityType
from extremecloudiq.model.xiq_hotspot_ipv6_availability_type import XiqHotspotIpv6AvailabilityType
from extremecloudiq.model.xiq_hotspot_localized_name import XiqHotspotLocalizedName
from extremecloudiq.model.xiq_hotspot_nai_realm import XiqHotspotNaiRealm
from extremecloudiq.model.xiq_hotspot_online_signup import XiqHotspotOnlineSignup
from extremecloudiq.model.xiq_hotspot_qos_map import XiqHotspotQosMap
from extremecloudiq.model.xiq_hotspot_roaming_consortium import XiqHotspotRoamingConsortium
from extremecloudiq.model.xiq_hotspot_venue import XiqHotspotVenue
from extremecloudiq.model.xiq_hotspot_wan_metrics import XiqHotspotWanMetrics
