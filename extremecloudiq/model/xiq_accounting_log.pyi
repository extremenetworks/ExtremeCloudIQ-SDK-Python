# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqAccountingLog(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    ExtremeCloud IQ Accounting Log
    """


    class MetaOapg:
        required = {
            "id",
        }
        
        class properties:
            id = schemas.Int64Schema
            username = schemas.StrSchema
            org_id = schemas.Int64Schema
            timestamp = schemas.Int64Schema
            vhm_id = schemas.StrSchema
            device_serial_number = schemas.StrSchema
            acct_session_id = schemas.StrSchema
            acct_multi_id = schemas.StrSchema
            group_name = schemas.StrSchema
            nas_ip_address = schemas.StrSchema
            nas_port = schemas.StrSchema
            nas_port_type = schemas.StrSchema
            acct_start_time = schemas.Int64Schema
            acct_stop_time = schemas.Int64Schema
            acct_session_time = schemas.Int64Schema
            acct_authentic = schemas.StrSchema
            connect_info = schemas.StrSchema
            acct_input_octets = schemas.Int64Schema
            acct_output_octets = schemas.Int64Schema
            called_station_id = schemas.StrSchema
            calling_station_id = schemas.StrSchema
            acct_terminate_cause = schemas.StrSchema
            service_type = schemas.StrSchema
            framed_ip_address = schemas.StrSchema
            acct_start_delay = schemas.Int64Schema
            acct_stop_delay = schemas.Int64Schema
            ssid = schemas.StrSchema
            identity = schemas.StrSchema
            nas_identifier = schemas.StrSchema
            mgmt_mac_address = schemas.StrSchema
            attribute_num = schemas.Int32Schema
            event_time = schemas.Int64Schema
            usage = schemas.Int64Schema
            __annotations__ = {
                "id": id,
                "username": username,
                "org_id": org_id,
                "timestamp": timestamp,
                "vhm_id": vhm_id,
                "device_serial_number": device_serial_number,
                "acct_session_id": acct_session_id,
                "acct_multi_id": acct_multi_id,
                "group_name": group_name,
                "nas_ip_address": nas_ip_address,
                "nas_port": nas_port,
                "nas_port_type": nas_port_type,
                "acct_start_time": acct_start_time,
                "acct_stop_time": acct_stop_time,
                "acct_session_time": acct_session_time,
                "acct_authentic": acct_authentic,
                "connect_info": connect_info,
                "acct_input_octets": acct_input_octets,
                "acct_output_octets": acct_output_octets,
                "called_station_id": called_station_id,
                "calling_station_id": calling_station_id,
                "acct_terminate_cause": acct_terminate_cause,
                "service_type": service_type,
                "framed_ip_address": framed_ip_address,
                "acct_start_delay": acct_start_delay,
                "acct_stop_delay": acct_stop_delay,
                "ssid": ssid,
                "identity": identity,
                "nas_identifier": nas_identifier,
                "mgmt_mac_address": mgmt_mac_address,
                "attribute_num": attribute_num,
                "event_time": event_time,
                "usage": usage,
            }
    
    id: MetaOapg.properties.id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["username"]) -> MetaOapg.properties.username: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["org_id"]) -> MetaOapg.properties.org_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["vhm_id"]) -> MetaOapg.properties.vhm_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["device_serial_number"]) -> MetaOapg.properties.device_serial_number: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_session_id"]) -> MetaOapg.properties.acct_session_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_multi_id"]) -> MetaOapg.properties.acct_multi_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["group_name"]) -> MetaOapg.properties.group_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nas_ip_address"]) -> MetaOapg.properties.nas_ip_address: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nas_port"]) -> MetaOapg.properties.nas_port: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nas_port_type"]) -> MetaOapg.properties.nas_port_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_start_time"]) -> MetaOapg.properties.acct_start_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_stop_time"]) -> MetaOapg.properties.acct_stop_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_session_time"]) -> MetaOapg.properties.acct_session_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_authentic"]) -> MetaOapg.properties.acct_authentic: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connect_info"]) -> MetaOapg.properties.connect_info: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_input_octets"]) -> MetaOapg.properties.acct_input_octets: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_output_octets"]) -> MetaOapg.properties.acct_output_octets: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["called_station_id"]) -> MetaOapg.properties.called_station_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["calling_station_id"]) -> MetaOapg.properties.calling_station_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_terminate_cause"]) -> MetaOapg.properties.acct_terminate_cause: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["service_type"]) -> MetaOapg.properties.service_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["framed_ip_address"]) -> MetaOapg.properties.framed_ip_address: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_start_delay"]) -> MetaOapg.properties.acct_start_delay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acct_stop_delay"]) -> MetaOapg.properties.acct_stop_delay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ssid"]) -> MetaOapg.properties.ssid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["identity"]) -> MetaOapg.properties.identity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nas_identifier"]) -> MetaOapg.properties.nas_identifier: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mgmt_mac_address"]) -> MetaOapg.properties.mgmt_mac_address: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attribute_num"]) -> MetaOapg.properties.attribute_num: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["event_time"]) -> MetaOapg.properties.event_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usage"]) -> MetaOapg.properties.usage: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "username", "org_id", "timestamp", "vhm_id", "device_serial_number", "acct_session_id", "acct_multi_id", "group_name", "nas_ip_address", "nas_port", "nas_port_type", "acct_start_time", "acct_stop_time", "acct_session_time", "acct_authentic", "connect_info", "acct_input_octets", "acct_output_octets", "called_station_id", "calling_station_id", "acct_terminate_cause", "service_type", "framed_ip_address", "acct_start_delay", "acct_stop_delay", "ssid", "identity", "nas_identifier", "mgmt_mac_address", "attribute_num", "event_time", "usage", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["username"]) -> typing.Union[MetaOapg.properties.username, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["org_id"]) -> typing.Union[MetaOapg.properties.org_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> typing.Union[MetaOapg.properties.timestamp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["vhm_id"]) -> typing.Union[MetaOapg.properties.vhm_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["device_serial_number"]) -> typing.Union[MetaOapg.properties.device_serial_number, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_session_id"]) -> typing.Union[MetaOapg.properties.acct_session_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_multi_id"]) -> typing.Union[MetaOapg.properties.acct_multi_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["group_name"]) -> typing.Union[MetaOapg.properties.group_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nas_ip_address"]) -> typing.Union[MetaOapg.properties.nas_ip_address, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nas_port"]) -> typing.Union[MetaOapg.properties.nas_port, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nas_port_type"]) -> typing.Union[MetaOapg.properties.nas_port_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_start_time"]) -> typing.Union[MetaOapg.properties.acct_start_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_stop_time"]) -> typing.Union[MetaOapg.properties.acct_stop_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_session_time"]) -> typing.Union[MetaOapg.properties.acct_session_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_authentic"]) -> typing.Union[MetaOapg.properties.acct_authentic, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connect_info"]) -> typing.Union[MetaOapg.properties.connect_info, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_input_octets"]) -> typing.Union[MetaOapg.properties.acct_input_octets, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_output_octets"]) -> typing.Union[MetaOapg.properties.acct_output_octets, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["called_station_id"]) -> typing.Union[MetaOapg.properties.called_station_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["calling_station_id"]) -> typing.Union[MetaOapg.properties.calling_station_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_terminate_cause"]) -> typing.Union[MetaOapg.properties.acct_terminate_cause, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["service_type"]) -> typing.Union[MetaOapg.properties.service_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["framed_ip_address"]) -> typing.Union[MetaOapg.properties.framed_ip_address, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_start_delay"]) -> typing.Union[MetaOapg.properties.acct_start_delay, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acct_stop_delay"]) -> typing.Union[MetaOapg.properties.acct_stop_delay, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ssid"]) -> typing.Union[MetaOapg.properties.ssid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["identity"]) -> typing.Union[MetaOapg.properties.identity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nas_identifier"]) -> typing.Union[MetaOapg.properties.nas_identifier, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mgmt_mac_address"]) -> typing.Union[MetaOapg.properties.mgmt_mac_address, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attribute_num"]) -> typing.Union[MetaOapg.properties.attribute_num, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["event_time"]) -> typing.Union[MetaOapg.properties.event_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usage"]) -> typing.Union[MetaOapg.properties.usage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "username", "org_id", "timestamp", "vhm_id", "device_serial_number", "acct_session_id", "acct_multi_id", "group_name", "nas_ip_address", "nas_port", "nas_port_type", "acct_start_time", "acct_stop_time", "acct_session_time", "acct_authentic", "connect_info", "acct_input_octets", "acct_output_octets", "called_station_id", "calling_station_id", "acct_terminate_cause", "service_type", "framed_ip_address", "acct_start_delay", "acct_stop_delay", "ssid", "identity", "nas_identifier", "mgmt_mac_address", "attribute_num", "event_time", "usage", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, ],
        username: typing.Union[MetaOapg.properties.username, str, schemas.Unset] = schemas.unset,
        org_id: typing.Union[MetaOapg.properties.org_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        timestamp: typing.Union[MetaOapg.properties.timestamp, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        vhm_id: typing.Union[MetaOapg.properties.vhm_id, str, schemas.Unset] = schemas.unset,
        device_serial_number: typing.Union[MetaOapg.properties.device_serial_number, str, schemas.Unset] = schemas.unset,
        acct_session_id: typing.Union[MetaOapg.properties.acct_session_id, str, schemas.Unset] = schemas.unset,
        acct_multi_id: typing.Union[MetaOapg.properties.acct_multi_id, str, schemas.Unset] = schemas.unset,
        group_name: typing.Union[MetaOapg.properties.group_name, str, schemas.Unset] = schemas.unset,
        nas_ip_address: typing.Union[MetaOapg.properties.nas_ip_address, str, schemas.Unset] = schemas.unset,
        nas_port: typing.Union[MetaOapg.properties.nas_port, str, schemas.Unset] = schemas.unset,
        nas_port_type: typing.Union[MetaOapg.properties.nas_port_type, str, schemas.Unset] = schemas.unset,
        acct_start_time: typing.Union[MetaOapg.properties.acct_start_time, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        acct_stop_time: typing.Union[MetaOapg.properties.acct_stop_time, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        acct_session_time: typing.Union[MetaOapg.properties.acct_session_time, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        acct_authentic: typing.Union[MetaOapg.properties.acct_authentic, str, schemas.Unset] = schemas.unset,
        connect_info: typing.Union[MetaOapg.properties.connect_info, str, schemas.Unset] = schemas.unset,
        acct_input_octets: typing.Union[MetaOapg.properties.acct_input_octets, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        acct_output_octets: typing.Union[MetaOapg.properties.acct_output_octets, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        called_station_id: typing.Union[MetaOapg.properties.called_station_id, str, schemas.Unset] = schemas.unset,
        calling_station_id: typing.Union[MetaOapg.properties.calling_station_id, str, schemas.Unset] = schemas.unset,
        acct_terminate_cause: typing.Union[MetaOapg.properties.acct_terminate_cause, str, schemas.Unset] = schemas.unset,
        service_type: typing.Union[MetaOapg.properties.service_type, str, schemas.Unset] = schemas.unset,
        framed_ip_address: typing.Union[MetaOapg.properties.framed_ip_address, str, schemas.Unset] = schemas.unset,
        acct_start_delay: typing.Union[MetaOapg.properties.acct_start_delay, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        acct_stop_delay: typing.Union[MetaOapg.properties.acct_stop_delay, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ssid: typing.Union[MetaOapg.properties.ssid, str, schemas.Unset] = schemas.unset,
        identity: typing.Union[MetaOapg.properties.identity, str, schemas.Unset] = schemas.unset,
        nas_identifier: typing.Union[MetaOapg.properties.nas_identifier, str, schemas.Unset] = schemas.unset,
        mgmt_mac_address: typing.Union[MetaOapg.properties.mgmt_mac_address, str, schemas.Unset] = schemas.unset,
        attribute_num: typing.Union[MetaOapg.properties.attribute_num, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        event_time: typing.Union[MetaOapg.properties.event_time, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        usage: typing.Union[MetaOapg.properties.usage, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqAccountingLog':
        return super().__new__(
            cls,
            *_args,
            id=id,
            username=username,
            org_id=org_id,
            timestamp=timestamp,
            vhm_id=vhm_id,
            device_serial_number=device_serial_number,
            acct_session_id=acct_session_id,
            acct_multi_id=acct_multi_id,
            group_name=group_name,
            nas_ip_address=nas_ip_address,
            nas_port=nas_port,
            nas_port_type=nas_port_type,
            acct_start_time=acct_start_time,
            acct_stop_time=acct_stop_time,
            acct_session_time=acct_session_time,
            acct_authentic=acct_authentic,
            connect_info=connect_info,
            acct_input_octets=acct_input_octets,
            acct_output_octets=acct_output_octets,
            called_station_id=called_station_id,
            calling_station_id=calling_station_id,
            acct_terminate_cause=acct_terminate_cause,
            service_type=service_type,
            framed_ip_address=framed_ip_address,
            acct_start_delay=acct_start_delay,
            acct_stop_delay=acct_stop_delay,
            ssid=ssid,
            identity=identity,
            nas_identifier=nas_identifier,
            mgmt_mac_address=mgmt_mac_address,
            attribute_num=attribute_num,
            event_time=event_time,
            usage=usage,
            _configuration=_configuration,
            **kwargs,
        )
