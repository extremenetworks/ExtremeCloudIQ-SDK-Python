# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqCreateWebhookSubscriptionRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The payload to create webhook subscription
    """


    class MetaOapg:
        required = {
            "application",
            "message_type",
            "url",
            "status",
        }
        
        class properties:
            application = schemas.StrSchema
            url = schemas.StrSchema
        
            @staticmethod
            def message_type() -> typing.Type['XiqSubscriptionMessageType']:
                return XiqSubscriptionMessageType
        
            @staticmethod
            def status() -> typing.Type['XiqSubscriptionStatus']:
                return XiqSubscriptionStatus
            secret = schemas.StrSchema
            __annotations__ = {
                "application": application,
                "url": url,
                "message_type": message_type,
                "status": status,
                "secret": secret,
            }
    
    application: MetaOapg.properties.application
    message_type: 'XiqSubscriptionMessageType'
    url: MetaOapg.properties.url
    status: 'XiqSubscriptionStatus'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["application"]) -> MetaOapg.properties.application: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["message_type"]) -> 'XiqSubscriptionMessageType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> 'XiqSubscriptionStatus': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secret"]) -> MetaOapg.properties.secret: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["application", "url", "message_type", "status", "secret", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["application"]) -> MetaOapg.properties.application: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["message_type"]) -> 'XiqSubscriptionMessageType': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> 'XiqSubscriptionStatus': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secret"]) -> typing.Union[MetaOapg.properties.secret, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["application", "url", "message_type", "status", "secret", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        application: typing.Union[MetaOapg.properties.application, str, ],
        message_type: 'XiqSubscriptionMessageType',
        url: typing.Union[MetaOapg.properties.url, str, ],
        status: 'XiqSubscriptionStatus',
        secret: typing.Union[MetaOapg.properties.secret, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqCreateWebhookSubscriptionRequest':
        return super().__new__(
            cls,
            *_args,
            application=application,
            message_type=message_type,
            url=url,
            status=status,
            secret=secret,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_subscription_message_type import XiqSubscriptionMessageType
from extremecloudiq.model.xiq_subscription_status import XiqSubscriptionStatus
