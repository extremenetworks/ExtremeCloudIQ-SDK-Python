# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqInternalRadiusDevice(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The configuration of internal RADIUS device object
    """


    class MetaOapg:
        required = {
            "radius_server_name",
            "update_time",
            "create_time",
            "id",
            "radius_server_id",
            "host_name",
        }
        
        class properties:
            id = schemas.Int64Schema
            create_time = schemas.DateTimeSchema
            update_time = schemas.DateTimeSchema
            radius_server_id = schemas.Int64Schema
            radius_server_name = schemas.StrSchema
            host_name = schemas.StrSchema
            org_id = schemas.Int64Schema
            __annotations__ = {
                "id": id,
                "create_time": create_time,
                "update_time": update_time,
                "radius_server_id": radius_server_id,
                "radius_server_name": radius_server_name,
                "host_name": host_name,
                "org_id": org_id,
            }
    
    radius_server_name: MetaOapg.properties.radius_server_name
    update_time: MetaOapg.properties.update_time
    create_time: MetaOapg.properties.create_time
    id: MetaOapg.properties.id
    radius_server_id: MetaOapg.properties.radius_server_id
    host_name: MetaOapg.properties.host_name
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["create_time"]) -> MetaOapg.properties.create_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["update_time"]) -> MetaOapg.properties.update_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["radius_server_id"]) -> MetaOapg.properties.radius_server_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["radius_server_name"]) -> MetaOapg.properties.radius_server_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["host_name"]) -> MetaOapg.properties.host_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["org_id"]) -> MetaOapg.properties.org_id: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "create_time", "update_time", "radius_server_id", "radius_server_name", "host_name", "org_id", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["create_time"]) -> MetaOapg.properties.create_time: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["update_time"]) -> MetaOapg.properties.update_time: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["radius_server_id"]) -> MetaOapg.properties.radius_server_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["radius_server_name"]) -> MetaOapg.properties.radius_server_name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["host_name"]) -> MetaOapg.properties.host_name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["org_id"]) -> typing.Union[MetaOapg.properties.org_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "create_time", "update_time", "radius_server_id", "radius_server_name", "host_name", "org_id", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        radius_server_name: typing.Union[MetaOapg.properties.radius_server_name, str, ],
        update_time: typing.Union[MetaOapg.properties.update_time, str, datetime, ],
        create_time: typing.Union[MetaOapg.properties.create_time, str, datetime, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, ],
        radius_server_id: typing.Union[MetaOapg.properties.radius_server_id, decimal.Decimal, int, ],
        host_name: typing.Union[MetaOapg.properties.host_name, str, ],
        org_id: typing.Union[MetaOapg.properties.org_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqInternalRadiusDevice':
        return super().__new__(
            cls,
            *_args,
            radius_server_name=radius_server_name,
            update_time=update_time,
            create_time=create_time,
            id=id,
            radius_server_id=radius_server_id,
            host_name=host_name,
            org_id=org_id,
            _configuration=_configuration,
            **kwargs,
        )
