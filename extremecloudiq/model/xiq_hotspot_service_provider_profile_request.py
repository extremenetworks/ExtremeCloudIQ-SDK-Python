# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqHotspotServiceProviderProfileRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "name",
        }
        
        class properties:
            name = schemas.StrSchema
            description = schemas.StrSchema
            
            
            class friendly_names(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotLocalizedName']:
                        return XiqHotspotLocalizedName
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotLocalizedName'], typing.List['XiqHotspotLocalizedName']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'friendly_names':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotLocalizedName':
                    return super().__getitem__(i)
            
            
            class descriptions(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotLocalizedName']:
                        return XiqHotspotLocalizedName
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotLocalizedName'], typing.List['XiqHotspotLocalizedName']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'descriptions':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotLocalizedName':
                    return super().__getitem__(i)
            
            
            class icon_files(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotServiceProviderIconFile']:
                        return XiqHotspotServiceProviderIconFile
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotServiceProviderIconFile'], typing.List['XiqHotspotServiceProviderIconFile']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'icon_files':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotServiceProviderIconFile':
                    return super().__getitem__(i)
            
            
            class nai_realms(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotNaiRealm']:
                        return XiqHotspotNaiRealm
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotNaiRealm'], typing.List['XiqHotspotNaiRealm']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'nai_realms':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotNaiRealm':
                    return super().__getitem__(i)
            
            
            class roaming_consortiums(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotRoamingConsortium']:
                        return XiqHotspotRoamingConsortium
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotRoamingConsortium'], typing.List['XiqHotspotRoamingConsortium']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'roaming_consortiums':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotRoamingConsortium':
                    return super().__getitem__(i)
            
            
            class cellular_networks(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotCellularNetwork']:
                        return XiqHotspotCellularNetwork
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotCellularNetwork'], typing.List['XiqHotspotCellularNetwork']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'cellular_networks':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotCellularNetwork':
                    return super().__getitem__(i)
            osu_uri = schemas.StrSchema
            
            
            class osu_methods(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqHotspotServiceProviderOsuMethod']:
                        return XiqHotspotServiceProviderOsuMethod
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqHotspotServiceProviderOsuMethod'], typing.List['XiqHotspotServiceProviderOsuMethod']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'osu_methods':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqHotspotServiceProviderOsuMethod':
                    return super().__getitem__(i)
            osu_nai = schemas.StrSchema
            __annotations__ = {
                "name": name,
                "description": description,
                "friendly_names": friendly_names,
                "descriptions": descriptions,
                "icon_files": icon_files,
                "nai_realms": nai_realms,
                "roaming_consortiums": roaming_consortiums,
                "cellular_networks": cellular_networks,
                "osu_uri": osu_uri,
                "osu_methods": osu_methods,
                "osu_nai": osu_nai,
            }
    
    name: MetaOapg.properties.name
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["friendly_names"]) -> MetaOapg.properties.friendly_names: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["descriptions"]) -> MetaOapg.properties.descriptions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["icon_files"]) -> MetaOapg.properties.icon_files: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nai_realms"]) -> MetaOapg.properties.nai_realms: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["roaming_consortiums"]) -> MetaOapg.properties.roaming_consortiums: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cellular_networks"]) -> MetaOapg.properties.cellular_networks: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["osu_uri"]) -> MetaOapg.properties.osu_uri: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["osu_methods"]) -> MetaOapg.properties.osu_methods: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["osu_nai"]) -> MetaOapg.properties.osu_nai: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "description", "friendly_names", "descriptions", "icon_files", "nai_realms", "roaming_consortiums", "cellular_networks", "osu_uri", "osu_methods", "osu_nai", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["friendly_names"]) -> typing.Union[MetaOapg.properties.friendly_names, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["descriptions"]) -> typing.Union[MetaOapg.properties.descriptions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["icon_files"]) -> typing.Union[MetaOapg.properties.icon_files, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nai_realms"]) -> typing.Union[MetaOapg.properties.nai_realms, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["roaming_consortiums"]) -> typing.Union[MetaOapg.properties.roaming_consortiums, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cellular_networks"]) -> typing.Union[MetaOapg.properties.cellular_networks, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["osu_uri"]) -> typing.Union[MetaOapg.properties.osu_uri, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["osu_methods"]) -> typing.Union[MetaOapg.properties.osu_methods, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["osu_nai"]) -> typing.Union[MetaOapg.properties.osu_nai, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "description", "friendly_names", "descriptions", "icon_files", "nai_realms", "roaming_consortiums", "cellular_networks", "osu_uri", "osu_methods", "osu_nai", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        friendly_names: typing.Union[MetaOapg.properties.friendly_names, list, tuple, schemas.Unset] = schemas.unset,
        descriptions: typing.Union[MetaOapg.properties.descriptions, list, tuple, schemas.Unset] = schemas.unset,
        icon_files: typing.Union[MetaOapg.properties.icon_files, list, tuple, schemas.Unset] = schemas.unset,
        nai_realms: typing.Union[MetaOapg.properties.nai_realms, list, tuple, schemas.Unset] = schemas.unset,
        roaming_consortiums: typing.Union[MetaOapg.properties.roaming_consortiums, list, tuple, schemas.Unset] = schemas.unset,
        cellular_networks: typing.Union[MetaOapg.properties.cellular_networks, list, tuple, schemas.Unset] = schemas.unset,
        osu_uri: typing.Union[MetaOapg.properties.osu_uri, str, schemas.Unset] = schemas.unset,
        osu_methods: typing.Union[MetaOapg.properties.osu_methods, list, tuple, schemas.Unset] = schemas.unset,
        osu_nai: typing.Union[MetaOapg.properties.osu_nai, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqHotspotServiceProviderProfileRequest':
        return super().__new__(
            cls,
            *_args,
            name=name,
            description=description,
            friendly_names=friendly_names,
            descriptions=descriptions,
            icon_files=icon_files,
            nai_realms=nai_realms,
            roaming_consortiums=roaming_consortiums,
            cellular_networks=cellular_networks,
            osu_uri=osu_uri,
            osu_methods=osu_methods,
            osu_nai=osu_nai,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_hotspot_cellular_network import XiqHotspotCellularNetwork
from extremecloudiq.model.xiq_hotspot_localized_name import XiqHotspotLocalizedName
from extremecloudiq.model.xiq_hotspot_nai_realm import XiqHotspotNaiRealm
from extremecloudiq.model.xiq_hotspot_roaming_consortium import XiqHotspotRoamingConsortium
from extremecloudiq.model.xiq_hotspot_service_provider_icon_file import XiqHotspotServiceProviderIconFile
from extremecloudiq.model.xiq_hotspot_service_provider_osu_method import XiqHotspotServiceProviderOsuMethod
