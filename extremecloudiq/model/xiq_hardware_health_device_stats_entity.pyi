# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqHardwareHealthDeviceStatsEntity(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    ExtremeCloud IQ Data Point
    """


    class MetaOapg:
        required = {
            "timestamp",
        }
        
        class properties:
            timestamp = schemas.Int64Schema
            avg_cpu_utilization = schemas.NumberSchema
            avg_memory_utilization = schemas.NumberSchema
            avg_client_count = schemas.Int32Schema
            unit_temperature = schemas.NumberSchema
            poe_power_mode = schemas.StrSchema
            __annotations__ = {
                "timestamp": timestamp,
                "avg_cpu_utilization": avg_cpu_utilization,
                "avg_memory_utilization": avg_memory_utilization,
                "avg_client_count": avg_client_count,
                "unit_temperature": unit_temperature,
                "poe_power_mode": poe_power_mode,
            }
    
    timestamp: MetaOapg.properties.timestamp
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avg_cpu_utilization"]) -> MetaOapg.properties.avg_cpu_utilization: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avg_memory_utilization"]) -> MetaOapg.properties.avg_memory_utilization: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avg_client_count"]) -> MetaOapg.properties.avg_client_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unit_temperature"]) -> MetaOapg.properties.unit_temperature: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["poe_power_mode"]) -> MetaOapg.properties.poe_power_mode: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["timestamp", "avg_cpu_utilization", "avg_memory_utilization", "avg_client_count", "unit_temperature", "poe_power_mode", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avg_cpu_utilization"]) -> typing.Union[MetaOapg.properties.avg_cpu_utilization, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avg_memory_utilization"]) -> typing.Union[MetaOapg.properties.avg_memory_utilization, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avg_client_count"]) -> typing.Union[MetaOapg.properties.avg_client_count, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unit_temperature"]) -> typing.Union[MetaOapg.properties.unit_temperature, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["poe_power_mode"]) -> typing.Union[MetaOapg.properties.poe_power_mode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["timestamp", "avg_cpu_utilization", "avg_memory_utilization", "avg_client_count", "unit_temperature", "poe_power_mode", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        timestamp: typing.Union[MetaOapg.properties.timestamp, decimal.Decimal, int, ],
        avg_cpu_utilization: typing.Union[MetaOapg.properties.avg_cpu_utilization, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        avg_memory_utilization: typing.Union[MetaOapg.properties.avg_memory_utilization, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        avg_client_count: typing.Union[MetaOapg.properties.avg_client_count, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        unit_temperature: typing.Union[MetaOapg.properties.unit_temperature, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        poe_power_mode: typing.Union[MetaOapg.properties.poe_power_mode, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqHardwareHealthDeviceStatsEntity':
        return super().__new__(
            cls,
            *_args,
            timestamp=timestamp,
            avg_cpu_utilization=avg_cpu_utilization,
            avg_memory_utilization=avg_memory_utilization,
            avg_client_count=avg_client_count,
            unit_temperature=unit_temperature,
            poe_power_mode=poe_power_mode,
            _configuration=_configuration,
            **kwargs,
        )
