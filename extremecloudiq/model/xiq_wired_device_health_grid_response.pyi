# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.3.0.140
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqWiredDeviceHealthGridResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Response body for the Wired Device Health grid
    """


    class MetaOapg:
        
        class properties:
            device_id = schemas.Int64Schema
            stack_size = schemas.StrSchema
            device_hostname = schemas.StrSchema
            device_ip = schemas.StrSchema
            site = schemas.StrSchema
            building = schemas.StrSchema
            floor = schemas.StrSchema
            cpu_usage = schemas.StrSchema
            memory_usage = schemas.StrSchema
            temperature = schemas.Int32Schema
            temperature_error_slots = schemas.StrSchema
            poe_usage = schemas.StrSchema
            poe_error_slots = schemas.StrSchema
            fan_error_slots = schemas.StrSchema
            psu_error_slots = schemas.StrSchema
            __annotations__ = {
                "device_id": device_id,
                "stack_size": stack_size,
                "device_hostname": device_hostname,
                "device_ip": device_ip,
                "site": site,
                "building": building,
                "floor": floor,
                "cpu_usage": cpu_usage,
                "memory_usage": memory_usage,
                "temperature": temperature,
                "temperature_error_slots": temperature_error_slots,
                "poe_usage": poe_usage,
                "poe_error_slots": poe_error_slots,
                "fan_error_slots": fan_error_slots,
                "psu_error_slots": psu_error_slots,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["device_id"]) -> MetaOapg.properties.device_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stack_size"]) -> MetaOapg.properties.stack_size: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["device_hostname"]) -> MetaOapg.properties.device_hostname: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["device_ip"]) -> MetaOapg.properties.device_ip: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["site"]) -> MetaOapg.properties.site: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["building"]) -> MetaOapg.properties.building: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["floor"]) -> MetaOapg.properties.floor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cpu_usage"]) -> MetaOapg.properties.cpu_usage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["memory_usage"]) -> MetaOapg.properties.memory_usage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temperature"]) -> MetaOapg.properties.temperature: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temperature_error_slots"]) -> MetaOapg.properties.temperature_error_slots: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["poe_usage"]) -> MetaOapg.properties.poe_usage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["poe_error_slots"]) -> MetaOapg.properties.poe_error_slots: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fan_error_slots"]) -> MetaOapg.properties.fan_error_slots: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["psu_error_slots"]) -> MetaOapg.properties.psu_error_slots: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["device_id", "stack_size", "device_hostname", "device_ip", "site", "building", "floor", "cpu_usage", "memory_usage", "temperature", "temperature_error_slots", "poe_usage", "poe_error_slots", "fan_error_slots", "psu_error_slots", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["device_id"]) -> typing.Union[MetaOapg.properties.device_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stack_size"]) -> typing.Union[MetaOapg.properties.stack_size, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["device_hostname"]) -> typing.Union[MetaOapg.properties.device_hostname, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["device_ip"]) -> typing.Union[MetaOapg.properties.device_ip, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["site"]) -> typing.Union[MetaOapg.properties.site, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["building"]) -> typing.Union[MetaOapg.properties.building, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["floor"]) -> typing.Union[MetaOapg.properties.floor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cpu_usage"]) -> typing.Union[MetaOapg.properties.cpu_usage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["memory_usage"]) -> typing.Union[MetaOapg.properties.memory_usage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temperature"]) -> typing.Union[MetaOapg.properties.temperature, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temperature_error_slots"]) -> typing.Union[MetaOapg.properties.temperature_error_slots, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["poe_usage"]) -> typing.Union[MetaOapg.properties.poe_usage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["poe_error_slots"]) -> typing.Union[MetaOapg.properties.poe_error_slots, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fan_error_slots"]) -> typing.Union[MetaOapg.properties.fan_error_slots, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["psu_error_slots"]) -> typing.Union[MetaOapg.properties.psu_error_slots, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["device_id", "stack_size", "device_hostname", "device_ip", "site", "building", "floor", "cpu_usage", "memory_usage", "temperature", "temperature_error_slots", "poe_usage", "poe_error_slots", "fan_error_slots", "psu_error_slots", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        device_id: typing.Union[MetaOapg.properties.device_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        stack_size: typing.Union[MetaOapg.properties.stack_size, str, schemas.Unset] = schemas.unset,
        device_hostname: typing.Union[MetaOapg.properties.device_hostname, str, schemas.Unset] = schemas.unset,
        device_ip: typing.Union[MetaOapg.properties.device_ip, str, schemas.Unset] = schemas.unset,
        site: typing.Union[MetaOapg.properties.site, str, schemas.Unset] = schemas.unset,
        building: typing.Union[MetaOapg.properties.building, str, schemas.Unset] = schemas.unset,
        floor: typing.Union[MetaOapg.properties.floor, str, schemas.Unset] = schemas.unset,
        cpu_usage: typing.Union[MetaOapg.properties.cpu_usage, str, schemas.Unset] = schemas.unset,
        memory_usage: typing.Union[MetaOapg.properties.memory_usage, str, schemas.Unset] = schemas.unset,
        temperature: typing.Union[MetaOapg.properties.temperature, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        temperature_error_slots: typing.Union[MetaOapg.properties.temperature_error_slots, str, schemas.Unset] = schemas.unset,
        poe_usage: typing.Union[MetaOapg.properties.poe_usage, str, schemas.Unset] = schemas.unset,
        poe_error_slots: typing.Union[MetaOapg.properties.poe_error_slots, str, schemas.Unset] = schemas.unset,
        fan_error_slots: typing.Union[MetaOapg.properties.fan_error_slots, str, schemas.Unset] = schemas.unset,
        psu_error_slots: typing.Union[MetaOapg.properties.psu_error_slots, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqWiredDeviceHealthGridResponse':
        return super().__new__(
            cls,
            *_args,
            device_id=device_id,
            stack_size=stack_size,
            device_hostname=device_hostname,
            device_ip=device_ip,
            site=site,
            building=building,
            floor=floor,
            cpu_usage=cpu_usage,
            memory_usage=memory_usage,
            temperature=temperature,
            temperature_error_slots=temperature_error_slots,
            poe_usage=poe_usage,
            poe_error_slots=poe_error_slots,
            fan_error_slots=fan_error_slots,
            psu_error_slots=psu_error_slots,
            _configuration=_configuration,
            **kwargs,
        )
