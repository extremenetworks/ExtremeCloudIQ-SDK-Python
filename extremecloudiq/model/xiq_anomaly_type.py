# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqAnomalyType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The anomaly Type
    """


    class MetaOapg:
        enum_value_to_name = {
            "POE_STABILITY": "POE_STABILITY",
            "DFS_RECURRENCE": "DFS_RECURRENCE",
            "ADVERSE_TRAFFIC": "ADVERSE_TRAFFIC",
            "PORT_EFFICIENCY": "PORT_EFFICIENCY",
            "WIFI_CAPACITY": "WIFI_CAPACITY",
            "WIFI_EFFICIENCY": "WIFI_EFFICIENCY",
            "HARDWARE_HEALTH": "HARDWARE_HEALTH",
            "MISSING_VLAN": "MISSING_VLAN",
        }
    
    @schemas.classproperty
    def POE_STABILITY(cls):
        return cls("POE_STABILITY")
    
    @schemas.classproperty
    def DFS_RECURRENCE(cls):
        return cls("DFS_RECURRENCE")
    
    @schemas.classproperty
    def ADVERSE_TRAFFIC(cls):
        return cls("ADVERSE_TRAFFIC")
    
    @schemas.classproperty
    def PORT_EFFICIENCY(cls):
        return cls("PORT_EFFICIENCY")
    
    @schemas.classproperty
    def WIFI_CAPACITY(cls):
        return cls("WIFI_CAPACITY")
    
    @schemas.classproperty
    def WIFI_EFFICIENCY(cls):
        return cls("WIFI_EFFICIENCY")
    
    @schemas.classproperty
    def HARDWARE_HEALTH(cls):
        return cls("HARDWARE_HEALTH")
    
    @schemas.classproperty
    def MISSING_VLAN(cls):
        return cls("MISSING_VLAN")
