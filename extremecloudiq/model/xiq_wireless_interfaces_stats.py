# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqWirelessInterfacesStats(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def wifi0() -> typing.Type['XiqWirelessWifi']:
                return XiqWirelessWifi
        
            @staticmethod
            def wifi1() -> typing.Type['XiqWirelessWifi']:
                return XiqWirelessWifi
        
            @staticmethod
            def wifi2() -> typing.Type['XiqWirelessWifi2']:
                return XiqWirelessWifi2
            __annotations__ = {
                "wifi0": wifi0,
                "wifi1": wifi1,
                "wifi2": wifi2,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wifi0"]) -> 'XiqWirelessWifi': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wifi1"]) -> 'XiqWirelessWifi': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wifi2"]) -> 'XiqWirelessWifi2': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["wifi0", "wifi1", "wifi2", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wifi0"]) -> typing.Union['XiqWirelessWifi', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wifi1"]) -> typing.Union['XiqWirelessWifi', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wifi2"]) -> typing.Union['XiqWirelessWifi2', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["wifi0", "wifi1", "wifi2", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        wifi0: typing.Union['XiqWirelessWifi', schemas.Unset] = schemas.unset,
        wifi1: typing.Union['XiqWirelessWifi', schemas.Unset] = schemas.unset,
        wifi2: typing.Union['XiqWirelessWifi2', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqWirelessInterfacesStats':
        return super().__new__(
            cls,
            *_args,
            wifi0=wifi0,
            wifi1=wifi1,
            wifi2=wifi2,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_wireless_wifi import XiqWirelessWifi
from extremecloudiq.model.xiq_wireless_wifi2 import XiqWirelessWifi2
