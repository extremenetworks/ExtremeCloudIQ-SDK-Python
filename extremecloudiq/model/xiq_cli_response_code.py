# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqCliResponseCode(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The CLI response code
    """


    class MetaOapg:
        enum_value_to_name = {
            "UNSPECIFIED": "UNSPECIFIED",
            "SUCCEED": "SUCCEED",
            "ERR_DEVICE_NOT_EXIST": "ERR_DEVICE_NOT_EXIST",
            "ERR_DEVICE_NOT_ACTIVE": "ERR_DEVICE_NOT_ACTIVE",
            "ERR_SEND_MESSAGE": "ERR_SEND_MESSAGE",
            "ERR_CLI_EXECUTED": "ERR_CLI_EXECUTED",
            "ERR_DEVICE_NOT_SUPPORTED": "ERR_DEVICE_NOT_SUPPORTED",
            "ERR_SIMULATE_NOT_SUPPORTED": "ERR_SIMULATE_NOT_SUPPORTED",
            "ERR_VERSION_NOT_SUPPORTED": "ERR_VERSION_NOT_SUPPORTED",
            "ERR_PARSE_FILE": "ERR_PARSE_FILE",
            "ERR_UNMANAGED_DEVICE": "ERR_UNMANAGED_DEVICE",
            "ERR_CLI_NOT_SENT": "ERR_CLI_NOT_SENT",
            "ERR_TIMEOUT": "ERR_TIMEOUT",
            "ERR_VPN_USING": "ERR_VPN_USING",
            "CLI_SENT_SUCCEED": "CLI_SENT_SUCCEED",
            "ERR_CLI_MAX_CLI_LIMIT_EXCEEDED": "ERR_CLI_MAX_CLI_LIMIT_EXCEEDED",
        }
    
    @schemas.classproperty
    def UNSPECIFIED(cls):
        return cls("UNSPECIFIED")
    
    @schemas.classproperty
    def SUCCEED(cls):
        return cls("SUCCEED")
    
    @schemas.classproperty
    def ERR_DEVICE_NOT_EXIST(cls):
        return cls("ERR_DEVICE_NOT_EXIST")
    
    @schemas.classproperty
    def ERR_DEVICE_NOT_ACTIVE(cls):
        return cls("ERR_DEVICE_NOT_ACTIVE")
    
    @schemas.classproperty
    def ERR_SEND_MESSAGE(cls):
        return cls("ERR_SEND_MESSAGE")
    
    @schemas.classproperty
    def ERR_CLI_EXECUTED(cls):
        return cls("ERR_CLI_EXECUTED")
    
    @schemas.classproperty
    def ERR_DEVICE_NOT_SUPPORTED(cls):
        return cls("ERR_DEVICE_NOT_SUPPORTED")
    
    @schemas.classproperty
    def ERR_SIMULATE_NOT_SUPPORTED(cls):
        return cls("ERR_SIMULATE_NOT_SUPPORTED")
    
    @schemas.classproperty
    def ERR_VERSION_NOT_SUPPORTED(cls):
        return cls("ERR_VERSION_NOT_SUPPORTED")
    
    @schemas.classproperty
    def ERR_PARSE_FILE(cls):
        return cls("ERR_PARSE_FILE")
    
    @schemas.classproperty
    def ERR_UNMANAGED_DEVICE(cls):
        return cls("ERR_UNMANAGED_DEVICE")
    
    @schemas.classproperty
    def ERR_CLI_NOT_SENT(cls):
        return cls("ERR_CLI_NOT_SENT")
    
    @schemas.classproperty
    def ERR_TIMEOUT(cls):
        return cls("ERR_TIMEOUT")
    
    @schemas.classproperty
    def ERR_VPN_USING(cls):
        return cls("ERR_VPN_USING")
    
    @schemas.classproperty
    def CLI_SENT_SUCCEED(cls):
        return cls("CLI_SENT_SUCCEED")
    
    @schemas.classproperty
    def ERR_CLI_MAX_CLI_LIMIT_EXCEEDED(cls):
        return cls("ERR_CLI_MAX_CLI_LIMIT_EXCEEDED")
