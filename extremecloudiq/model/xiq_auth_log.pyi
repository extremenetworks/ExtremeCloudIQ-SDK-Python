# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqAuthLog(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    ExtremeCloud IQ Auth Log
    """


    class MetaOapg:
        required = {
            "id",
        }
        
        class properties:
            id = schemas.StrSchema
            auth_type = schemas.StrSchema
            sn = schemas.StrSchema
            vhm_id = schemas.StrSchema
            username = schemas.StrSchema
            reply = schemas.StrSchema
            called_station_id = schemas.StrSchema
            calling_station_id = schemas.StrSchema
            auth_date = schemas.Int64Schema
            ssid = schemas.StrSchema
            identity = schemas.StrSchema
            nas_port_type = schemas.StrSchema
            reject_reason = schemas.StrSchema
            nas_identifier = schemas.StrSchema
            mgmt_mac_address = schemas.StrSchema
            org_id = schemas.Int64Schema
            timestamp = schemas.Int64Schema
            __annotations__ = {
                "id": id,
                "auth_type": auth_type,
                "sn": sn,
                "vhm_id": vhm_id,
                "username": username,
                "reply": reply,
                "called_station_id": called_station_id,
                "calling_station_id": calling_station_id,
                "auth_date": auth_date,
                "ssid": ssid,
                "identity": identity,
                "nas_port_type": nas_port_type,
                "reject_reason": reject_reason,
                "nas_identifier": nas_identifier,
                "mgmt_mac_address": mgmt_mac_address,
                "org_id": org_id,
                "timestamp": timestamp,
            }
    
    id: MetaOapg.properties.id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auth_type"]) -> MetaOapg.properties.auth_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sn"]) -> MetaOapg.properties.sn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["vhm_id"]) -> MetaOapg.properties.vhm_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["username"]) -> MetaOapg.properties.username: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reply"]) -> MetaOapg.properties.reply: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["called_station_id"]) -> MetaOapg.properties.called_station_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["calling_station_id"]) -> MetaOapg.properties.calling_station_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auth_date"]) -> MetaOapg.properties.auth_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ssid"]) -> MetaOapg.properties.ssid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["identity"]) -> MetaOapg.properties.identity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nas_port_type"]) -> MetaOapg.properties.nas_port_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reject_reason"]) -> MetaOapg.properties.reject_reason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nas_identifier"]) -> MetaOapg.properties.nas_identifier: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mgmt_mac_address"]) -> MetaOapg.properties.mgmt_mac_address: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["org_id"]) -> MetaOapg.properties.org_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "auth_type", "sn", "vhm_id", "username", "reply", "called_station_id", "calling_station_id", "auth_date", "ssid", "identity", "nas_port_type", "reject_reason", "nas_identifier", "mgmt_mac_address", "org_id", "timestamp", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auth_type"]) -> typing.Union[MetaOapg.properties.auth_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sn"]) -> typing.Union[MetaOapg.properties.sn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["vhm_id"]) -> typing.Union[MetaOapg.properties.vhm_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["username"]) -> typing.Union[MetaOapg.properties.username, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reply"]) -> typing.Union[MetaOapg.properties.reply, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["called_station_id"]) -> typing.Union[MetaOapg.properties.called_station_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["calling_station_id"]) -> typing.Union[MetaOapg.properties.calling_station_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auth_date"]) -> typing.Union[MetaOapg.properties.auth_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ssid"]) -> typing.Union[MetaOapg.properties.ssid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["identity"]) -> typing.Union[MetaOapg.properties.identity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nas_port_type"]) -> typing.Union[MetaOapg.properties.nas_port_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reject_reason"]) -> typing.Union[MetaOapg.properties.reject_reason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nas_identifier"]) -> typing.Union[MetaOapg.properties.nas_identifier, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mgmt_mac_address"]) -> typing.Union[MetaOapg.properties.mgmt_mac_address, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["org_id"]) -> typing.Union[MetaOapg.properties.org_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> typing.Union[MetaOapg.properties.timestamp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "auth_type", "sn", "vhm_id", "username", "reply", "called_station_id", "calling_station_id", "auth_date", "ssid", "identity", "nas_port_type", "reject_reason", "nas_identifier", "mgmt_mac_address", "org_id", "timestamp", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        auth_type: typing.Union[MetaOapg.properties.auth_type, str, schemas.Unset] = schemas.unset,
        sn: typing.Union[MetaOapg.properties.sn, str, schemas.Unset] = schemas.unset,
        vhm_id: typing.Union[MetaOapg.properties.vhm_id, str, schemas.Unset] = schemas.unset,
        username: typing.Union[MetaOapg.properties.username, str, schemas.Unset] = schemas.unset,
        reply: typing.Union[MetaOapg.properties.reply, str, schemas.Unset] = schemas.unset,
        called_station_id: typing.Union[MetaOapg.properties.called_station_id, str, schemas.Unset] = schemas.unset,
        calling_station_id: typing.Union[MetaOapg.properties.calling_station_id, str, schemas.Unset] = schemas.unset,
        auth_date: typing.Union[MetaOapg.properties.auth_date, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ssid: typing.Union[MetaOapg.properties.ssid, str, schemas.Unset] = schemas.unset,
        identity: typing.Union[MetaOapg.properties.identity, str, schemas.Unset] = schemas.unset,
        nas_port_type: typing.Union[MetaOapg.properties.nas_port_type, str, schemas.Unset] = schemas.unset,
        reject_reason: typing.Union[MetaOapg.properties.reject_reason, str, schemas.Unset] = schemas.unset,
        nas_identifier: typing.Union[MetaOapg.properties.nas_identifier, str, schemas.Unset] = schemas.unset,
        mgmt_mac_address: typing.Union[MetaOapg.properties.mgmt_mac_address, str, schemas.Unset] = schemas.unset,
        org_id: typing.Union[MetaOapg.properties.org_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        timestamp: typing.Union[MetaOapg.properties.timestamp, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqAuthLog':
        return super().__new__(
            cls,
            *_args,
            id=id,
            auth_type=auth_type,
            sn=sn,
            vhm_id=vhm_id,
            username=username,
            reply=reply,
            called_station_id=called_station_id,
            calling_station_id=calling_station_id,
            auth_date=auth_date,
            ssid=ssid,
            identity=identity,
            nas_port_type=nas_port_type,
            reject_reason=reject_reason,
            nas_identifier=nas_identifier,
            mgmt_mac_address=mgmt_mac_address,
            org_id=org_id,
            timestamp=timestamp,
            _configuration=_configuration,
            **kwargs,
        )
