# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqWirelessDashboardCriteriaParamResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The wireless diagnostics criteria param response
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def client_health_criteria_param() -> typing.Type['XiqWirelessClientHealthCriteriaParam']:
                return XiqWirelessClientHealthCriteriaParam
        
            @staticmethod
            def device_health_criteria_param() -> typing.Type['XiqWirelessDeviceHealthCriteriaParam']:
                return XiqWirelessDeviceHealthCriteriaParam
        
            @staticmethod
            def usage_capacity_criteria_param() -> typing.Type['XiqWirelessUsageCapacityCriteriaParam']:
                return XiqWirelessUsageCapacityCriteriaParam
            __annotations__ = {
                "client_health_criteria_param": client_health_criteria_param,
                "device_health_criteria_param": device_health_criteria_param,
                "usage_capacity_criteria_param": usage_capacity_criteria_param,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_health_criteria_param"]) -> 'XiqWirelessClientHealthCriteriaParam': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["device_health_criteria_param"]) -> 'XiqWirelessDeviceHealthCriteriaParam': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usage_capacity_criteria_param"]) -> 'XiqWirelessUsageCapacityCriteriaParam': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["client_health_criteria_param", "device_health_criteria_param", "usage_capacity_criteria_param", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_health_criteria_param"]) -> typing.Union['XiqWirelessClientHealthCriteriaParam', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["device_health_criteria_param"]) -> typing.Union['XiqWirelessDeviceHealthCriteriaParam', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usage_capacity_criteria_param"]) -> typing.Union['XiqWirelessUsageCapacityCriteriaParam', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["client_health_criteria_param", "device_health_criteria_param", "usage_capacity_criteria_param", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        client_health_criteria_param: typing.Union['XiqWirelessClientHealthCriteriaParam', schemas.Unset] = schemas.unset,
        device_health_criteria_param: typing.Union['XiqWirelessDeviceHealthCriteriaParam', schemas.Unset] = schemas.unset,
        usage_capacity_criteria_param: typing.Union['XiqWirelessUsageCapacityCriteriaParam', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqWirelessDashboardCriteriaParamResponse':
        return super().__new__(
            cls,
            *_args,
            client_health_criteria_param=client_health_criteria_param,
            device_health_criteria_param=device_health_criteria_param,
            usage_capacity_criteria_param=usage_capacity_criteria_param,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_wireless_client_health_criteria_param import XiqWirelessClientHealthCriteriaParam
from extremecloudiq.model.xiq_wireless_device_health_criteria_param import XiqWirelessDeviceHealthCriteriaParam
from extremecloudiq.model.xiq_wireless_usage_capacity_criteria_param import XiqWirelessUsageCapacityCriteriaParam
