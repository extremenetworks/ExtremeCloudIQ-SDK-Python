# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqDeploymentByIdStatusResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The deployment details status response
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def schedule_status() -> typing.Type['XiqScheduleStatus']:
                return XiqScheduleStatus
            schedule_time = schemas.Int64Schema
            created_time = schemas.Int64Schema
            updated_time = schemas.Int64Schema
            
            
            class site_info(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqSiteInfo']:
                        return XiqSiteInfo
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqSiteInfo'], typing.List['XiqSiteInfo']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'site_info':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqSiteInfo':
                    return super().__getitem__(i)
            
            
            class deployment_status(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def additional_properties() -> typing.Type['XiqDeploymentStatus']:
                        return XiqDeploymentStatus
                
                def __getitem__(self, name: typing.Union[str, ]) -> 'XiqDeploymentStatus':
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                def get_item_oapg(self, name: typing.Union[str, ]) -> 'XiqDeploymentStatus':
                    return super().get_item_oapg(name)
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: 'XiqDeploymentStatus',
                ) -> 'deployment_status':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                        **kwargs,
                    )
        
            @staticmethod
            def overview() -> typing.Type['XiqDeploymentOverviewDetails']:
                return XiqDeploymentOverviewDetails
            __annotations__ = {
                "schedule_status": schedule_status,
                "schedule_time": schedule_time,
                "created_time": created_time,
                "updated_time": updated_time,
                "site_info": site_info,
                "deployment_status": deployment_status,
                "overview": overview,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["schedule_status"]) -> 'XiqScheduleStatus': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["schedule_time"]) -> MetaOapg.properties.schedule_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_time"]) -> MetaOapg.properties.created_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated_time"]) -> MetaOapg.properties.updated_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["site_info"]) -> MetaOapg.properties.site_info: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deployment_status"]) -> MetaOapg.properties.deployment_status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["overview"]) -> 'XiqDeploymentOverviewDetails': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["schedule_status", "schedule_time", "created_time", "updated_time", "site_info", "deployment_status", "overview", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["schedule_status"]) -> typing.Union['XiqScheduleStatus', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["schedule_time"]) -> typing.Union[MetaOapg.properties.schedule_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_time"]) -> typing.Union[MetaOapg.properties.created_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated_time"]) -> typing.Union[MetaOapg.properties.updated_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["site_info"]) -> typing.Union[MetaOapg.properties.site_info, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deployment_status"]) -> typing.Union[MetaOapg.properties.deployment_status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["overview"]) -> typing.Union['XiqDeploymentOverviewDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["schedule_status", "schedule_time", "created_time", "updated_time", "site_info", "deployment_status", "overview", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        schedule_status: typing.Union['XiqScheduleStatus', schemas.Unset] = schemas.unset,
        schedule_time: typing.Union[MetaOapg.properties.schedule_time, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        created_time: typing.Union[MetaOapg.properties.created_time, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        updated_time: typing.Union[MetaOapg.properties.updated_time, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        site_info: typing.Union[MetaOapg.properties.site_info, list, tuple, schemas.Unset] = schemas.unset,
        deployment_status: typing.Union[MetaOapg.properties.deployment_status, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        overview: typing.Union['XiqDeploymentOverviewDetails', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqDeploymentByIdStatusResponse':
        return super().__new__(
            cls,
            *_args,
            schedule_status=schedule_status,
            schedule_time=schedule_time,
            created_time=created_time,
            updated_time=updated_time,
            site_info=site_info,
            deployment_status=deployment_status,
            overview=overview,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_deployment_overview_details import XiqDeploymentOverviewDetails
from extremecloudiq.model.xiq_deployment_status import XiqDeploymentStatus
from extremecloudiq.model.xiq_schedule_status import XiqScheduleStatus
from extremecloudiq.model.xiq_site_info import XiqSiteInfo
