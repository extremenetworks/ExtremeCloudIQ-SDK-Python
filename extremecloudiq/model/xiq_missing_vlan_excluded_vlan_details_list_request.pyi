# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqMissingVlanExcludedVlanDetailsListRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

     The Excluded Vlan details list 
    """


    class MetaOapg:
        required = {
            "action_type",
            "dismiss",
        }
        
        class properties:
        
            @staticmethod
            def action_type() -> typing.Type['XiqExcludedVlanActionType']:
                return XiqExcludedVlanActionType
            dismiss = schemas.BoolSchema
            
            
            class excluded_vlan_details(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqMissingVlanExcludedVlanDetails']:
                        return XiqMissingVlanExcludedVlanDetails
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqMissingVlanExcludedVlanDetails'], typing.List['XiqMissingVlanExcludedVlanDetails']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'excluded_vlan_details':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqMissingVlanExcludedVlanDetails':
                    return super().__getitem__(i)
            old_vlan_id = schemas.Int32Schema
            __annotations__ = {
                "action_type": action_type,
                "dismiss": dismiss,
                "excluded_vlan_details": excluded_vlan_details,
                "old_vlan_id": old_vlan_id,
            }
    
    action_type: 'XiqExcludedVlanActionType'
    dismiss: MetaOapg.properties.dismiss
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["action_type"]) -> 'XiqExcludedVlanActionType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dismiss"]) -> MetaOapg.properties.dismiss: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["excluded_vlan_details"]) -> MetaOapg.properties.excluded_vlan_details: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["old_vlan_id"]) -> MetaOapg.properties.old_vlan_id: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["action_type", "dismiss", "excluded_vlan_details", "old_vlan_id", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["action_type"]) -> 'XiqExcludedVlanActionType': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dismiss"]) -> MetaOapg.properties.dismiss: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["excluded_vlan_details"]) -> typing.Union[MetaOapg.properties.excluded_vlan_details, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["old_vlan_id"]) -> typing.Union[MetaOapg.properties.old_vlan_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["action_type", "dismiss", "excluded_vlan_details", "old_vlan_id", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        action_type: 'XiqExcludedVlanActionType',
        dismiss: typing.Union[MetaOapg.properties.dismiss, bool, ],
        excluded_vlan_details: typing.Union[MetaOapg.properties.excluded_vlan_details, list, tuple, schemas.Unset] = schemas.unset,
        old_vlan_id: typing.Union[MetaOapg.properties.old_vlan_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqMissingVlanExcludedVlanDetailsListRequest':
        return super().__new__(
            cls,
            *_args,
            action_type=action_type,
            dismiss=dismiss,
            excluded_vlan_details=excluded_vlan_details,
            old_vlan_id=old_vlan_id,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_excluded_vlan_action_type import XiqExcludedVlanActionType
from extremecloudiq.model.xiq_missing_vlan_excluded_vlan_details import XiqMissingVlanExcludedVlanDetails
