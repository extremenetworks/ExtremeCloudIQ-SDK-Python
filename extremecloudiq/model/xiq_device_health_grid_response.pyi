# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqDeviceHealthGridResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The device health grid
    """


    class MetaOapg:
        
        class properties:
            hostname = schemas.StrSchema
            device_ip = schemas.StrSchema
            site = schemas.StrSchema
            building = schemas.StrSchema
            floor = schemas.StrSchema
            cpu_usage_percentage = schemas.Int64Schema
            memory_usage_percentage = schemas.Int64Schema
            poe_usage_indicator = schemas.BoolSchema
            channel_change_count = schemas.Int64Schema
            wifi_reboots_count = schemas.Int64Schema
            eth0_unicast_score = schemas.Int64Schema
            eth0_broadcast_score = schemas.Int64Schema
            eth0_multicast_score = schemas.Int64Schema
            eth1_unicast_score = schemas.Int64Schema
            eth1_broadcast_score = schemas.Int64Schema
            eth1_multicast_score = schemas.Int64Schema
            device_id = schemas.Int64Schema
            has_device_health_issue = schemas.BoolSchema
            __annotations__ = {
                "hostname": hostname,
                "device_ip": device_ip,
                "site": site,
                "building": building,
                "floor": floor,
                "cpu_usage_percentage": cpu_usage_percentage,
                "memory_usage_percentage": memory_usage_percentage,
                "poe_usage_indicator": poe_usage_indicator,
                "channel_change_count": channel_change_count,
                "wifi_reboots_count": wifi_reboots_count,
                "eth0_unicast_score": eth0_unicast_score,
                "eth0_broadcast_score": eth0_broadcast_score,
                "eth0_multicast_score": eth0_multicast_score,
                "eth1_unicast_score": eth1_unicast_score,
                "eth1_broadcast_score": eth1_broadcast_score,
                "eth1_multicast_score": eth1_multicast_score,
                "device_id": device_id,
                "has_device_health_issue": has_device_health_issue,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hostname"]) -> MetaOapg.properties.hostname: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["device_ip"]) -> MetaOapg.properties.device_ip: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["site"]) -> MetaOapg.properties.site: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["building"]) -> MetaOapg.properties.building: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["floor"]) -> MetaOapg.properties.floor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cpu_usage_percentage"]) -> MetaOapg.properties.cpu_usage_percentage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["memory_usage_percentage"]) -> MetaOapg.properties.memory_usage_percentage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["poe_usage_indicator"]) -> MetaOapg.properties.poe_usage_indicator: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["channel_change_count"]) -> MetaOapg.properties.channel_change_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wifi_reboots_count"]) -> MetaOapg.properties.wifi_reboots_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eth0_unicast_score"]) -> MetaOapg.properties.eth0_unicast_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eth0_broadcast_score"]) -> MetaOapg.properties.eth0_broadcast_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eth0_multicast_score"]) -> MetaOapg.properties.eth0_multicast_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eth1_unicast_score"]) -> MetaOapg.properties.eth1_unicast_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eth1_broadcast_score"]) -> MetaOapg.properties.eth1_broadcast_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eth1_multicast_score"]) -> MetaOapg.properties.eth1_multicast_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["device_id"]) -> MetaOapg.properties.device_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["has_device_health_issue"]) -> MetaOapg.properties.has_device_health_issue: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["hostname", "device_ip", "site", "building", "floor", "cpu_usage_percentage", "memory_usage_percentage", "poe_usage_indicator", "channel_change_count", "wifi_reboots_count", "eth0_unicast_score", "eth0_broadcast_score", "eth0_multicast_score", "eth1_unicast_score", "eth1_broadcast_score", "eth1_multicast_score", "device_id", "has_device_health_issue", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hostname"]) -> typing.Union[MetaOapg.properties.hostname, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["device_ip"]) -> typing.Union[MetaOapg.properties.device_ip, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["site"]) -> typing.Union[MetaOapg.properties.site, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["building"]) -> typing.Union[MetaOapg.properties.building, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["floor"]) -> typing.Union[MetaOapg.properties.floor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cpu_usage_percentage"]) -> typing.Union[MetaOapg.properties.cpu_usage_percentage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["memory_usage_percentage"]) -> typing.Union[MetaOapg.properties.memory_usage_percentage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["poe_usage_indicator"]) -> typing.Union[MetaOapg.properties.poe_usage_indicator, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["channel_change_count"]) -> typing.Union[MetaOapg.properties.channel_change_count, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wifi_reboots_count"]) -> typing.Union[MetaOapg.properties.wifi_reboots_count, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eth0_unicast_score"]) -> typing.Union[MetaOapg.properties.eth0_unicast_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eth0_broadcast_score"]) -> typing.Union[MetaOapg.properties.eth0_broadcast_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eth0_multicast_score"]) -> typing.Union[MetaOapg.properties.eth0_multicast_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eth1_unicast_score"]) -> typing.Union[MetaOapg.properties.eth1_unicast_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eth1_broadcast_score"]) -> typing.Union[MetaOapg.properties.eth1_broadcast_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eth1_multicast_score"]) -> typing.Union[MetaOapg.properties.eth1_multicast_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["device_id"]) -> typing.Union[MetaOapg.properties.device_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["has_device_health_issue"]) -> typing.Union[MetaOapg.properties.has_device_health_issue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["hostname", "device_ip", "site", "building", "floor", "cpu_usage_percentage", "memory_usage_percentage", "poe_usage_indicator", "channel_change_count", "wifi_reboots_count", "eth0_unicast_score", "eth0_broadcast_score", "eth0_multicast_score", "eth1_unicast_score", "eth1_broadcast_score", "eth1_multicast_score", "device_id", "has_device_health_issue", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        hostname: typing.Union[MetaOapg.properties.hostname, str, schemas.Unset] = schemas.unset,
        device_ip: typing.Union[MetaOapg.properties.device_ip, str, schemas.Unset] = schemas.unset,
        site: typing.Union[MetaOapg.properties.site, str, schemas.Unset] = schemas.unset,
        building: typing.Union[MetaOapg.properties.building, str, schemas.Unset] = schemas.unset,
        floor: typing.Union[MetaOapg.properties.floor, str, schemas.Unset] = schemas.unset,
        cpu_usage_percentage: typing.Union[MetaOapg.properties.cpu_usage_percentage, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        memory_usage_percentage: typing.Union[MetaOapg.properties.memory_usage_percentage, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        poe_usage_indicator: typing.Union[MetaOapg.properties.poe_usage_indicator, bool, schemas.Unset] = schemas.unset,
        channel_change_count: typing.Union[MetaOapg.properties.channel_change_count, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        wifi_reboots_count: typing.Union[MetaOapg.properties.wifi_reboots_count, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        eth0_unicast_score: typing.Union[MetaOapg.properties.eth0_unicast_score, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        eth0_broadcast_score: typing.Union[MetaOapg.properties.eth0_broadcast_score, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        eth0_multicast_score: typing.Union[MetaOapg.properties.eth0_multicast_score, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        eth1_unicast_score: typing.Union[MetaOapg.properties.eth1_unicast_score, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        eth1_broadcast_score: typing.Union[MetaOapg.properties.eth1_broadcast_score, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        eth1_multicast_score: typing.Union[MetaOapg.properties.eth1_multicast_score, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        device_id: typing.Union[MetaOapg.properties.device_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        has_device_health_issue: typing.Union[MetaOapg.properties.has_device_health_issue, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqDeviceHealthGridResponse':
        return super().__new__(
            cls,
            *_args,
            hostname=hostname,
            device_ip=device_ip,
            site=site,
            building=building,
            floor=floor,
            cpu_usage_percentage=cpu_usage_percentage,
            memory_usage_percentage=memory_usage_percentage,
            poe_usage_indicator=poe_usage_indicator,
            channel_change_count=channel_change_count,
            wifi_reboots_count=wifi_reboots_count,
            eth0_unicast_score=eth0_unicast_score,
            eth0_broadcast_score=eth0_broadcast_score,
            eth0_multicast_score=eth0_multicast_score,
            eth1_unicast_score=eth1_unicast_score,
            eth1_broadcast_score=eth1_broadcast_score,
            eth1_multicast_score=eth1_multicast_score,
            device_id=device_id,
            has_device_health_issue=has_device_health_issue,
            _configuration=_configuration,
            **kwargs,
        )
