# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqCopilotWirelessEvent(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    ExtremeCloud IQ Connectivity Experience Client Details
    """


    class MetaOapg:
        required = {
            "client_id",
            "mac",
        }
        
        class properties:
            mac = schemas.StrSchema
            client_id = schemas.StrSchema
            average_value = schemas.Float64Schema
            maximum_value = schemas.Float64Schema
            os_type = schemas.StrSchema
            threshold = schemas.Float64Schema
            hostname = schemas.StrSchema
            ssid = schemas.StrSchema
        
            @staticmethod
            def retries_data() -> typing.Type['XiqWirelessEventRetriesEntity']:
                return XiqWirelessEventRetriesEntity
            __annotations__ = {
                "mac": mac,
                "client_id": client_id,
                "average_value": average_value,
                "maximum_value": maximum_value,
                "os_type": os_type,
                "threshold": threshold,
                "hostname": hostname,
                "ssid": ssid,
                "retries_data": retries_data,
            }
    
    client_id: MetaOapg.properties.client_id
    mac: MetaOapg.properties.mac
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mac"]) -> MetaOapg.properties.mac: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_id"]) -> MetaOapg.properties.client_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["average_value"]) -> MetaOapg.properties.average_value: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maximum_value"]) -> MetaOapg.properties.maximum_value: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["os_type"]) -> MetaOapg.properties.os_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["threshold"]) -> MetaOapg.properties.threshold: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hostname"]) -> MetaOapg.properties.hostname: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ssid"]) -> MetaOapg.properties.ssid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["retries_data"]) -> 'XiqWirelessEventRetriesEntity': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["mac", "client_id", "average_value", "maximum_value", "os_type", "threshold", "hostname", "ssid", "retries_data", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mac"]) -> MetaOapg.properties.mac: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_id"]) -> MetaOapg.properties.client_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["average_value"]) -> typing.Union[MetaOapg.properties.average_value, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maximum_value"]) -> typing.Union[MetaOapg.properties.maximum_value, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["os_type"]) -> typing.Union[MetaOapg.properties.os_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["threshold"]) -> typing.Union[MetaOapg.properties.threshold, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hostname"]) -> typing.Union[MetaOapg.properties.hostname, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ssid"]) -> typing.Union[MetaOapg.properties.ssid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["retries_data"]) -> typing.Union['XiqWirelessEventRetriesEntity', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["mac", "client_id", "average_value", "maximum_value", "os_type", "threshold", "hostname", "ssid", "retries_data", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        client_id: typing.Union[MetaOapg.properties.client_id, str, ],
        mac: typing.Union[MetaOapg.properties.mac, str, ],
        average_value: typing.Union[MetaOapg.properties.average_value, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        maximum_value: typing.Union[MetaOapg.properties.maximum_value, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        os_type: typing.Union[MetaOapg.properties.os_type, str, schemas.Unset] = schemas.unset,
        threshold: typing.Union[MetaOapg.properties.threshold, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        hostname: typing.Union[MetaOapg.properties.hostname, str, schemas.Unset] = schemas.unset,
        ssid: typing.Union[MetaOapg.properties.ssid, str, schemas.Unset] = schemas.unset,
        retries_data: typing.Union['XiqWirelessEventRetriesEntity', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqCopilotWirelessEvent':
        return super().__new__(
            cls,
            *_args,
            client_id=client_id,
            mac=mac,
            average_value=average_value,
            maximum_value=maximum_value,
            os_type=os_type,
            threshold=threshold,
            hostname=hostname,
            ssid=ssid,
            retries_data=retries_data,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_wireless_event_retries_entity import XiqWirelessEventRetriesEntity
