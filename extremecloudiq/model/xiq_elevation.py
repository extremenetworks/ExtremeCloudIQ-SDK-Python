# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqElevation(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            height = schemas.Float32Schema
            
            
            class height_reference(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "AGL": "AGL",
                        "AMSL": "AMSL",
                    }
                
                @schemas.classproperty
                def AGL(cls):
                    return cls("AGL")
                
                @schemas.classproperty
                def AMSL(cls):
                    return cls("AMSL")
            uncertainty = schemas.Int32Schema
            __annotations__ = {
                "height": height,
                "height_reference": height_reference,
                "uncertainty": uncertainty,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["height"]) -> MetaOapg.properties.height: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["height_reference"]) -> MetaOapg.properties.height_reference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uncertainty"]) -> MetaOapg.properties.uncertainty: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["height", "height_reference", "uncertainty", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["height"]) -> typing.Union[MetaOapg.properties.height, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["height_reference"]) -> typing.Union[MetaOapg.properties.height_reference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uncertainty"]) -> typing.Union[MetaOapg.properties.uncertainty, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["height", "height_reference", "uncertainty", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        height: typing.Union[MetaOapg.properties.height, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        height_reference: typing.Union[MetaOapg.properties.height_reference, str, schemas.Unset] = schemas.unset,
        uncertainty: typing.Union[MetaOapg.properties.uncertainty, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqElevation':
        return super().__new__(
            cls,
            *_args,
            height=height,
            height_reference=height_reference,
            uncertainty=uncertainty,
            _configuration=_configuration,
            **kwargs,
        )
