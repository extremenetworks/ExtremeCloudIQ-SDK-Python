# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqApplicationTopClientsUsage(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The Top N Clients Usage per Application
    """


    class MetaOapg:
        
        class properties:
            application_id = schemas.Int64Schema
            client_id = schemas.Int64Schema
            client_mac_address = schemas.StrSchema
            client_host_name = schemas.StrSchema
            usage = schemas.Int64Schema
            __annotations__ = {
                "application_id": application_id,
                "client_id": client_id,
                "client_mac_address": client_mac_address,
                "client_host_name": client_host_name,
                "usage": usage,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["application_id"]) -> MetaOapg.properties.application_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_id"]) -> MetaOapg.properties.client_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_mac_address"]) -> MetaOapg.properties.client_mac_address: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_host_name"]) -> MetaOapg.properties.client_host_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usage"]) -> MetaOapg.properties.usage: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["application_id", "client_id", "client_mac_address", "client_host_name", "usage", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["application_id"]) -> typing.Union[MetaOapg.properties.application_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_id"]) -> typing.Union[MetaOapg.properties.client_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_mac_address"]) -> typing.Union[MetaOapg.properties.client_mac_address, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_host_name"]) -> typing.Union[MetaOapg.properties.client_host_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usage"]) -> typing.Union[MetaOapg.properties.usage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["application_id", "client_id", "client_mac_address", "client_host_name", "usage", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        application_id: typing.Union[MetaOapg.properties.application_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        client_id: typing.Union[MetaOapg.properties.client_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        client_mac_address: typing.Union[MetaOapg.properties.client_mac_address, str, schemas.Unset] = schemas.unset,
        client_host_name: typing.Union[MetaOapg.properties.client_host_name, str, schemas.Unset] = schemas.unset,
        usage: typing.Union[MetaOapg.properties.usage, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqApplicationTopClientsUsage':
        return super().__new__(
            cls,
            *_args,
            application_id=application_id,
            client_id=client_id,
            client_mac_address=client_mac_address,
            client_host_name=client_host_name,
            usage=usage,
            _configuration=_configuration,
            **kwargs,
        )
