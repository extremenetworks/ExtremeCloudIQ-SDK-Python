# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqDeviceInterfaceRadioMode(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Wirelss Interfaces.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def name() -> typing.Type['XiqWirelessIfName']:
                return XiqWirelessIfName
            
            
            class band(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "BAND24": "BAND24",
                        "BAND5": "BAND5",
                        "BAND5LOW": "BAND5LOW",
                        "BAND5HIGH": "BAND5HIGH",
                        "BAND6": "BAND6",
                        "BAND6LOW": "BAND6LOW",
                        "BAND6HIGH": "BAND6HIGH",
                        "BANDNONE": "BANDNONE",
                    }
                
                @schemas.classproperty
                def BAND24(cls):
                    return cls("BAND24")
                
                @schemas.classproperty
                def BAND5(cls):
                    return cls("BAND5")
                
                @schemas.classproperty
                def BAND5LOW(cls):
                    return cls("BAND5LOW")
                
                @schemas.classproperty
                def BAND5HIGH(cls):
                    return cls("BAND5HIGH")
                
                @schemas.classproperty
                def BAND6(cls):
                    return cls("BAND6")
                
                @schemas.classproperty
                def BAND6LOW(cls):
                    return cls("BAND6LOW")
                
                @schemas.classproperty
                def BAND6HIGH(cls):
                    return cls("BAND6HIGH")
                
                @schemas.classproperty
                def BANDNONE(cls):
                    return cls("BANDNONE")
        
            @staticmethod
            def default_radio_mode() -> typing.Type['XiqRadioMode']:
                return XiqRadioMode
            __annotations__ = {
                "name": name,
                "band": band,
                "default_radio_mode": default_radio_mode,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> 'XiqWirelessIfName': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["band"]) -> MetaOapg.properties.band: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["default_radio_mode"]) -> 'XiqRadioMode': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "band", "default_radio_mode", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union['XiqWirelessIfName', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["band"]) -> typing.Union[MetaOapg.properties.band, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["default_radio_mode"]) -> typing.Union['XiqRadioMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "band", "default_radio_mode", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union['XiqWirelessIfName', schemas.Unset] = schemas.unset,
        band: typing.Union[MetaOapg.properties.band, str, schemas.Unset] = schemas.unset,
        default_radio_mode: typing.Union['XiqRadioMode', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqDeviceInterfaceRadioMode':
        return super().__new__(
            cls,
            *_args,
            name=name,
            band=band,
            default_radio_mode=default_radio_mode,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_radio_mode import XiqRadioMode
from extremecloudiq.model.xiq_wireless_if_name import XiqWirelessIfName
