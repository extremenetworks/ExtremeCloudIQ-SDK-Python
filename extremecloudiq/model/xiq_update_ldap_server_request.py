# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqUpdateLdapServerRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            name = schemas.StrSchema
            description = schemas.StrSchema
            enable_tls = schemas.BoolSchema
            bind_dn = schemas.StrSchema
            bind_dn_password = schemas.StrSchema
            base_dn = schemas.StrSchema
            l3_address_profile_id = schemas.Int64Schema
        
            @staticmethod
            def protocol_type() -> typing.Type['XiqLdapProtocolType']:
                return XiqLdapProtocolType
            enable_strip_realm_name = schemas.BoolSchema
            
            
            class destination_port(
                schemas.Int32Schema
            ):
            
            
                class MetaOapg:
                    format = 'int32'
                    inclusive_minimum = 1
        
            @staticmethod
            def verification_mode() -> typing.Type['XiqLdapServerVerificationMode']:
                return XiqLdapServerVerificationMode
            ca_certificate_id = schemas.Int64Schema
            client_certificate_id = schemas.Int64Schema
            client_key_id = schemas.Int64Schema
            __annotations__ = {
                "name": name,
                "description": description,
                "enable_tls": enable_tls,
                "bind_dn": bind_dn,
                "bind_dn_password": bind_dn_password,
                "base_dn": base_dn,
                "l3_address_profile_id": l3_address_profile_id,
                "protocol_type": protocol_type,
                "enable_strip_realm_name": enable_strip_realm_name,
                "destination_port": destination_port,
                "verification_mode": verification_mode,
                "ca_certificate_id": ca_certificate_id,
                "client_certificate_id": client_certificate_id,
                "client_key_id": client_key_id,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enable_tls"]) -> MetaOapg.properties.enable_tls: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bind_dn"]) -> MetaOapg.properties.bind_dn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bind_dn_password"]) -> MetaOapg.properties.bind_dn_password: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["base_dn"]) -> MetaOapg.properties.base_dn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["l3_address_profile_id"]) -> MetaOapg.properties.l3_address_profile_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protocol_type"]) -> 'XiqLdapProtocolType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enable_strip_realm_name"]) -> MetaOapg.properties.enable_strip_realm_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["destination_port"]) -> MetaOapg.properties.destination_port: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["verification_mode"]) -> 'XiqLdapServerVerificationMode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ca_certificate_id"]) -> MetaOapg.properties.ca_certificate_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_certificate_id"]) -> MetaOapg.properties.client_certificate_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_key_id"]) -> MetaOapg.properties.client_key_id: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "description", "enable_tls", "bind_dn", "bind_dn_password", "base_dn", "l3_address_profile_id", "protocol_type", "enable_strip_realm_name", "destination_port", "verification_mode", "ca_certificate_id", "client_certificate_id", "client_key_id", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enable_tls"]) -> typing.Union[MetaOapg.properties.enable_tls, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bind_dn"]) -> typing.Union[MetaOapg.properties.bind_dn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bind_dn_password"]) -> typing.Union[MetaOapg.properties.bind_dn_password, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["base_dn"]) -> typing.Union[MetaOapg.properties.base_dn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["l3_address_profile_id"]) -> typing.Union[MetaOapg.properties.l3_address_profile_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protocol_type"]) -> typing.Union['XiqLdapProtocolType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enable_strip_realm_name"]) -> typing.Union[MetaOapg.properties.enable_strip_realm_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["destination_port"]) -> typing.Union[MetaOapg.properties.destination_port, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["verification_mode"]) -> typing.Union['XiqLdapServerVerificationMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ca_certificate_id"]) -> typing.Union[MetaOapg.properties.ca_certificate_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_certificate_id"]) -> typing.Union[MetaOapg.properties.client_certificate_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_key_id"]) -> typing.Union[MetaOapg.properties.client_key_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "description", "enable_tls", "bind_dn", "bind_dn_password", "base_dn", "l3_address_profile_id", "protocol_type", "enable_strip_realm_name", "destination_port", "verification_mode", "ca_certificate_id", "client_certificate_id", "client_key_id", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        enable_tls: typing.Union[MetaOapg.properties.enable_tls, bool, schemas.Unset] = schemas.unset,
        bind_dn: typing.Union[MetaOapg.properties.bind_dn, str, schemas.Unset] = schemas.unset,
        bind_dn_password: typing.Union[MetaOapg.properties.bind_dn_password, str, schemas.Unset] = schemas.unset,
        base_dn: typing.Union[MetaOapg.properties.base_dn, str, schemas.Unset] = schemas.unset,
        l3_address_profile_id: typing.Union[MetaOapg.properties.l3_address_profile_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        protocol_type: typing.Union['XiqLdapProtocolType', schemas.Unset] = schemas.unset,
        enable_strip_realm_name: typing.Union[MetaOapg.properties.enable_strip_realm_name, bool, schemas.Unset] = schemas.unset,
        destination_port: typing.Union[MetaOapg.properties.destination_port, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        verification_mode: typing.Union['XiqLdapServerVerificationMode', schemas.Unset] = schemas.unset,
        ca_certificate_id: typing.Union[MetaOapg.properties.ca_certificate_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        client_certificate_id: typing.Union[MetaOapg.properties.client_certificate_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        client_key_id: typing.Union[MetaOapg.properties.client_key_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqUpdateLdapServerRequest':
        return super().__new__(
            cls,
            *_args,
            name=name,
            description=description,
            enable_tls=enable_tls,
            bind_dn=bind_dn,
            bind_dn_password=bind_dn_password,
            base_dn=base_dn,
            l3_address_profile_id=l3_address_profile_id,
            protocol_type=protocol_type,
            enable_strip_realm_name=enable_strip_realm_name,
            destination_port=destination_port,
            verification_mode=verification_mode,
            ca_certificate_id=ca_certificate_id,
            client_certificate_id=client_certificate_id,
            client_key_id=client_key_id,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_ldap_protocol_type import XiqLdapProtocolType
from extremecloudiq.model.xiq_ldap_server_verification_mode import XiqLdapServerVerificationMode
