# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqClientStatsEntity(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    ExtremeCloud IQ Client List Stats
    """


    class MetaOapg:
        
        class properties:
            client_mac = schemas.StrSchema
            client_name = schemas.StrSchema
            client_host_os = schemas.StrSchema
            avg_snr = schemas.Int32Schema
            avg_tx_rate = schemas.Int32Schema
            avg_rx_rate = schemas.Int32Schema
            client_id = schemas.Int64Schema
            avg_rssi = schemas.Int32Schema
        
            @staticmethod
            def health_score() -> typing.Type['XiqAnomalyHealthType']:
                return XiqAnomalyHealthType
            __annotations__ = {
                "client_mac": client_mac,
                "client_name": client_name,
                "client_host_os": client_host_os,
                "avg_snr": avg_snr,
                "avg_tx_rate": avg_tx_rate,
                "avg_rx_rate": avg_rx_rate,
                "client_id": client_id,
                "avg_rssi": avg_rssi,
                "health_score": health_score,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_mac"]) -> MetaOapg.properties.client_mac: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_name"]) -> MetaOapg.properties.client_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_host_os"]) -> MetaOapg.properties.client_host_os: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avg_snr"]) -> MetaOapg.properties.avg_snr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avg_tx_rate"]) -> MetaOapg.properties.avg_tx_rate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avg_rx_rate"]) -> MetaOapg.properties.avg_rx_rate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_id"]) -> MetaOapg.properties.client_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avg_rssi"]) -> MetaOapg.properties.avg_rssi: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["health_score"]) -> 'XiqAnomalyHealthType': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["client_mac", "client_name", "client_host_os", "avg_snr", "avg_tx_rate", "avg_rx_rate", "client_id", "avg_rssi", "health_score", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_mac"]) -> typing.Union[MetaOapg.properties.client_mac, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_name"]) -> typing.Union[MetaOapg.properties.client_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_host_os"]) -> typing.Union[MetaOapg.properties.client_host_os, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avg_snr"]) -> typing.Union[MetaOapg.properties.avg_snr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avg_tx_rate"]) -> typing.Union[MetaOapg.properties.avg_tx_rate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avg_rx_rate"]) -> typing.Union[MetaOapg.properties.avg_rx_rate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_id"]) -> typing.Union[MetaOapg.properties.client_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avg_rssi"]) -> typing.Union[MetaOapg.properties.avg_rssi, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["health_score"]) -> typing.Union['XiqAnomalyHealthType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["client_mac", "client_name", "client_host_os", "avg_snr", "avg_tx_rate", "avg_rx_rate", "client_id", "avg_rssi", "health_score", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        client_mac: typing.Union[MetaOapg.properties.client_mac, str, schemas.Unset] = schemas.unset,
        client_name: typing.Union[MetaOapg.properties.client_name, str, schemas.Unset] = schemas.unset,
        client_host_os: typing.Union[MetaOapg.properties.client_host_os, str, schemas.Unset] = schemas.unset,
        avg_snr: typing.Union[MetaOapg.properties.avg_snr, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        avg_tx_rate: typing.Union[MetaOapg.properties.avg_tx_rate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        avg_rx_rate: typing.Union[MetaOapg.properties.avg_rx_rate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        client_id: typing.Union[MetaOapg.properties.client_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        avg_rssi: typing.Union[MetaOapg.properties.avg_rssi, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        health_score: typing.Union['XiqAnomalyHealthType', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqClientStatsEntity':
        return super().__new__(
            cls,
            *_args,
            client_mac=client_mac,
            client_name=client_name,
            client_host_os=client_host_os,
            avg_snr=avg_snr,
            avg_tx_rate=avg_tx_rate,
            avg_rx_rate=avg_rx_rate,
            client_id=client_id,
            avg_rssi=avg_rssi,
            health_score=health_score,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_anomaly_health_type import XiqAnomalyHealthType
