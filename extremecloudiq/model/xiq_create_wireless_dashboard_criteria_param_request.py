# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqCreateWirelessDashboardCriteriaParamRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Create wireless diagnostics criteria param request
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def device_health_criteria() -> typing.Type['XiqCreateWirelessDeviceHealthCriteria']:
                return XiqCreateWirelessDeviceHealthCriteria
        
            @staticmethod
            def client_health_criteria() -> typing.Type['XiqCreateWirelessClientHealthCriteria']:
                return XiqCreateWirelessClientHealthCriteria
        
            @staticmethod
            def usage_capacity_criteria() -> typing.Type['XiqCreateWirelessUsageCapacityCriteria']:
                return XiqCreateWirelessUsageCapacityCriteria
            __annotations__ = {
                "device_health_criteria": device_health_criteria,
                "client_health_criteria": client_health_criteria,
                "usage_capacity_criteria": usage_capacity_criteria,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["device_health_criteria"]) -> 'XiqCreateWirelessDeviceHealthCriteria': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_health_criteria"]) -> 'XiqCreateWirelessClientHealthCriteria': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usage_capacity_criteria"]) -> 'XiqCreateWirelessUsageCapacityCriteria': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["device_health_criteria", "client_health_criteria", "usage_capacity_criteria", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["device_health_criteria"]) -> typing.Union['XiqCreateWirelessDeviceHealthCriteria', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_health_criteria"]) -> typing.Union['XiqCreateWirelessClientHealthCriteria', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usage_capacity_criteria"]) -> typing.Union['XiqCreateWirelessUsageCapacityCriteria', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["device_health_criteria", "client_health_criteria", "usage_capacity_criteria", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        device_health_criteria: typing.Union['XiqCreateWirelessDeviceHealthCriteria', schemas.Unset] = schemas.unset,
        client_health_criteria: typing.Union['XiqCreateWirelessClientHealthCriteria', schemas.Unset] = schemas.unset,
        usage_capacity_criteria: typing.Union['XiqCreateWirelessUsageCapacityCriteria', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqCreateWirelessDashboardCriteriaParamRequest':
        return super().__new__(
            cls,
            *_args,
            device_health_criteria=device_health_criteria,
            client_health_criteria=client_health_criteria,
            usage_capacity_criteria=usage_capacity_criteria,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_create_wireless_client_health_criteria import XiqCreateWirelessClientHealthCriteria
from extremecloudiq.model.xiq_create_wireless_device_health_criteria import XiqCreateWirelessDeviceHealthCriteria
from extremecloudiq.model.xiq_create_wireless_usage_capacity_criteria import XiqCreateWirelessUsageCapacityCriteria
