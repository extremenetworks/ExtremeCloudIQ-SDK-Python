# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqWirelessPerformanceEntity(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    ExtremeCloud IQ Connectivity Experience Performance data
    """


    class MetaOapg:
        required = {
            "timestamp",
        }
        
        class properties:
            timestamp = schemas.Int64Schema
            quality_index = schemas.Int32Schema
            total_clients = schemas.Int32Schema
            time_to_connect_score = schemas.Int32Schema
            performance_score = schemas.Int32Schema
            snr = schemas.Int32Schema
        
            @staticmethod
            def retries_data() -> typing.Type['XiqWirelessPerformanceRetriesEntity']:
                return XiqWirelessPerformanceRetriesEntity
            __annotations__ = {
                "timestamp": timestamp,
                "quality_index": quality_index,
                "total_clients": total_clients,
                "time_to_connect_score": time_to_connect_score,
                "performance_score": performance_score,
                "snr": snr,
                "retries_data": retries_data,
            }
    
    timestamp: MetaOapg.properties.timestamp
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["quality_index"]) -> MetaOapg.properties.quality_index: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_clients"]) -> MetaOapg.properties.total_clients: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["time_to_connect_score"]) -> MetaOapg.properties.time_to_connect_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["performance_score"]) -> MetaOapg.properties.performance_score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["snr"]) -> MetaOapg.properties.snr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["retries_data"]) -> 'XiqWirelessPerformanceRetriesEntity': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["timestamp", "quality_index", "total_clients", "time_to_connect_score", "performance_score", "snr", "retries_data", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["quality_index"]) -> typing.Union[MetaOapg.properties.quality_index, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_clients"]) -> typing.Union[MetaOapg.properties.total_clients, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["time_to_connect_score"]) -> typing.Union[MetaOapg.properties.time_to_connect_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["performance_score"]) -> typing.Union[MetaOapg.properties.performance_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["snr"]) -> typing.Union[MetaOapg.properties.snr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["retries_data"]) -> typing.Union['XiqWirelessPerformanceRetriesEntity', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["timestamp", "quality_index", "total_clients", "time_to_connect_score", "performance_score", "snr", "retries_data", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        timestamp: typing.Union[MetaOapg.properties.timestamp, decimal.Decimal, int, ],
        quality_index: typing.Union[MetaOapg.properties.quality_index, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        total_clients: typing.Union[MetaOapg.properties.total_clients, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        time_to_connect_score: typing.Union[MetaOapg.properties.time_to_connect_score, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        performance_score: typing.Union[MetaOapg.properties.performance_score, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        snr: typing.Union[MetaOapg.properties.snr, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        retries_data: typing.Union['XiqWirelessPerformanceRetriesEntity', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqWirelessPerformanceEntity':
        return super().__new__(
            cls,
            *_args,
            timestamp=timestamp,
            quality_index=quality_index,
            total_clients=total_clients,
            time_to_connect_score=time_to_connect_score,
            performance_score=performance_score,
            snr=snr,
            retries_data=retries_data,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_wireless_performance_retries_entity import XiqWirelessPerformanceRetriesEntity
