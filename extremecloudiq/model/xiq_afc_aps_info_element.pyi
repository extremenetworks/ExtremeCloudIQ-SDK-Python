# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqAfcApsInfoElement(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def afc_status() -> typing.Type['XiqAfcStatusSummary']:
                return XiqAfcStatusSummary
        
            @staticmethod
            def geo_location() -> typing.Type['XiqAfcGeolocationSummary']:
                return XiqAfcGeolocationSummary
        
            @staticmethod
            def spectrum_mismatch() -> typing.Type['XiqSpectrumMismatchSummary']:
                return XiqSpectrumMismatchSummary
            __annotations__ = {
                "afc_status": afc_status,
                "geo_location": geo_location,
                "spectrum_mismatch": spectrum_mismatch,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["afc_status"]) -> 'XiqAfcStatusSummary': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["geo_location"]) -> 'XiqAfcGeolocationSummary': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["spectrum_mismatch"]) -> 'XiqSpectrumMismatchSummary': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["afc_status", "geo_location", "spectrum_mismatch", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["afc_status"]) -> typing.Union['XiqAfcStatusSummary', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["geo_location"]) -> typing.Union['XiqAfcGeolocationSummary', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["spectrum_mismatch"]) -> typing.Union['XiqSpectrumMismatchSummary', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["afc_status", "geo_location", "spectrum_mismatch", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        afc_status: typing.Union['XiqAfcStatusSummary', schemas.Unset] = schemas.unset,
        geo_location: typing.Union['XiqAfcGeolocationSummary', schemas.Unset] = schemas.unset,
        spectrum_mismatch: typing.Union['XiqSpectrumMismatchSummary', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqAfcApsInfoElement':
        return super().__new__(
            cls,
            *_args,
            afc_status=afc_status,
            geo_location=geo_location,
            spectrum_mismatch=spectrum_mismatch,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_afc_geolocation_summary import XiqAfcGeolocationSummary
from extremecloudiq.model.xiq_afc_status_summary import XiqAfcStatusSummary
from extremecloudiq.model.xiq_spectrum_mismatch_summary import XiqSpectrumMismatchSummary
