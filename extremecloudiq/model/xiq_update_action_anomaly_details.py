# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqUpdateActionAnomalyDetails(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Anomaly Action Filter
    """


    class MetaOapg:
        required = {
            "anomalyType",
            "buildingId",
        }
        
        class properties:
            buildingId = schemas.Int64Schema
        
            @staticmethod
            def anomalyType() -> typing.Type['XiqAnomalyType']:
                return XiqAnomalyType
            locationId = schemas.Int64Schema
            anomalyId = schemas.StrSchema
            __annotations__ = {
                "buildingId": buildingId,
                "anomalyType": anomalyType,
                "locationId": locationId,
                "anomalyId": anomalyId,
            }
    
    anomalyType: 'XiqAnomalyType'
    buildingId: MetaOapg.properties.buildingId
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["buildingId"]) -> MetaOapg.properties.buildingId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["anomalyType"]) -> 'XiqAnomalyType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locationId"]) -> MetaOapg.properties.locationId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["anomalyId"]) -> MetaOapg.properties.anomalyId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["buildingId", "anomalyType", "locationId", "anomalyId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["buildingId"]) -> MetaOapg.properties.buildingId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["anomalyType"]) -> 'XiqAnomalyType': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locationId"]) -> typing.Union[MetaOapg.properties.locationId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["anomalyId"]) -> typing.Union[MetaOapg.properties.anomalyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["buildingId", "anomalyType", "locationId", "anomalyId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        anomalyType: 'XiqAnomalyType',
        buildingId: typing.Union[MetaOapg.properties.buildingId, decimal.Decimal, int, ],
        locationId: typing.Union[MetaOapg.properties.locationId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        anomalyId: typing.Union[MetaOapg.properties.anomalyId, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqUpdateActionAnomalyDetails':
        return super().__new__(
            cls,
            *_args,
            anomalyType=anomalyType,
            buildingId=buildingId,
            locationId=locationId,
            anomalyId=anomalyId,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_anomaly_type import XiqAnomalyType
