# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqUpdateRadiusClientObjectRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "enable_permit_dynamic_authorization_message_change",
            "enable_inject_operator_name_attribute",
            "accounting_interim_update_interval",
            "enable_message_authenticator_attribute",
            "name",
            "retry_interval",
        }
        
        class properties:
            name = schemas.StrSchema
            enable_inject_operator_name_attribute = schemas.BoolSchema
            enable_message_authenticator_attribute = schemas.BoolSchema
            enable_permit_dynamic_authorization_message_change = schemas.BoolSchema
            
            
            class retry_interval(
                schemas.Int32Schema
            ):
            
            
                class MetaOapg:
                    format = 'int32'
                    inclusive_maximum = 100000000
                    inclusive_minimum = 60
            
            
            class accounting_interim_update_interval(
                schemas.Int32Schema
            ):
            
            
                class MetaOapg:
                    format = 'int32'
                    inclusive_maximum = 100000000
                    inclusive_minimum = 60
            description = schemas.StrSchema
            __annotations__ = {
                "name": name,
                "enable_inject_operator_name_attribute": enable_inject_operator_name_attribute,
                "enable_message_authenticator_attribute": enable_message_authenticator_attribute,
                "enable_permit_dynamic_authorization_message_change": enable_permit_dynamic_authorization_message_change,
                "retry_interval": retry_interval,
                "accounting_interim_update_interval": accounting_interim_update_interval,
                "description": description,
            }
    
    enable_permit_dynamic_authorization_message_change: MetaOapg.properties.enable_permit_dynamic_authorization_message_change
    enable_inject_operator_name_attribute: MetaOapg.properties.enable_inject_operator_name_attribute
    accounting_interim_update_interval: MetaOapg.properties.accounting_interim_update_interval
    enable_message_authenticator_attribute: MetaOapg.properties.enable_message_authenticator_attribute
    name: MetaOapg.properties.name
    retry_interval: MetaOapg.properties.retry_interval
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enable_inject_operator_name_attribute"]) -> MetaOapg.properties.enable_inject_operator_name_attribute: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enable_message_authenticator_attribute"]) -> MetaOapg.properties.enable_message_authenticator_attribute: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enable_permit_dynamic_authorization_message_change"]) -> MetaOapg.properties.enable_permit_dynamic_authorization_message_change: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["retry_interval"]) -> MetaOapg.properties.retry_interval: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accounting_interim_update_interval"]) -> MetaOapg.properties.accounting_interim_update_interval: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "enable_inject_operator_name_attribute", "enable_message_authenticator_attribute", "enable_permit_dynamic_authorization_message_change", "retry_interval", "accounting_interim_update_interval", "description", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enable_inject_operator_name_attribute"]) -> MetaOapg.properties.enable_inject_operator_name_attribute: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enable_message_authenticator_attribute"]) -> MetaOapg.properties.enable_message_authenticator_attribute: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enable_permit_dynamic_authorization_message_change"]) -> MetaOapg.properties.enable_permit_dynamic_authorization_message_change: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["retry_interval"]) -> MetaOapg.properties.retry_interval: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accounting_interim_update_interval"]) -> MetaOapg.properties.accounting_interim_update_interval: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "enable_inject_operator_name_attribute", "enable_message_authenticator_attribute", "enable_permit_dynamic_authorization_message_change", "retry_interval", "accounting_interim_update_interval", "description", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        enable_permit_dynamic_authorization_message_change: typing.Union[MetaOapg.properties.enable_permit_dynamic_authorization_message_change, bool, ],
        enable_inject_operator_name_attribute: typing.Union[MetaOapg.properties.enable_inject_operator_name_attribute, bool, ],
        accounting_interim_update_interval: typing.Union[MetaOapg.properties.accounting_interim_update_interval, decimal.Decimal, int, ],
        enable_message_authenticator_attribute: typing.Union[MetaOapg.properties.enable_message_authenticator_attribute, bool, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        retry_interval: typing.Union[MetaOapg.properties.retry_interval, decimal.Decimal, int, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqUpdateRadiusClientObjectRequest':
        return super().__new__(
            cls,
            *_args,
            enable_permit_dynamic_authorization_message_change=enable_permit_dynamic_authorization_message_change,
            enable_inject_operator_name_attribute=enable_inject_operator_name_attribute,
            accounting_interim_update_interval=accounting_interim_update_interval,
            enable_message_authenticator_attribute=enable_message_authenticator_attribute,
            name=name,
            retry_interval=retry_interval,
            description=description,
            _configuration=_configuration,
            **kwargs,
        )
