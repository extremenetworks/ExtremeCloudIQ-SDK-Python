# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.3.0.140
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqWiredDeviceHealthFanStatusResponseEntry(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The description of the fan status response for a device
    """


    class MetaOapg:
        
        class properties:
            slot_number = schemas.StrSchema
            fan_status_error = schemas.StrSchema
            fan_total = schemas.StrSchema
            
            
            class fan_units(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqWiredDeviceHealthFanStatus']:
                        return XiqWiredDeviceHealthFanStatus
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqWiredDeviceHealthFanStatus'], typing.List['XiqWiredDeviceHealthFanStatus']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'fan_units':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqWiredDeviceHealthFanStatus':
                    return super().__getitem__(i)
            __annotations__ = {
                "slot_number": slot_number,
                "fan_status_error": fan_status_error,
                "fan_total": fan_total,
                "fan_units": fan_units,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["slot_number"]) -> MetaOapg.properties.slot_number: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fan_status_error"]) -> MetaOapg.properties.fan_status_error: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fan_total"]) -> MetaOapg.properties.fan_total: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fan_units"]) -> MetaOapg.properties.fan_units: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["slot_number", "fan_status_error", "fan_total", "fan_units", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["slot_number"]) -> typing.Union[MetaOapg.properties.slot_number, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fan_status_error"]) -> typing.Union[MetaOapg.properties.fan_status_error, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fan_total"]) -> typing.Union[MetaOapg.properties.fan_total, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fan_units"]) -> typing.Union[MetaOapg.properties.fan_units, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["slot_number", "fan_status_error", "fan_total", "fan_units", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        slot_number: typing.Union[MetaOapg.properties.slot_number, str, schemas.Unset] = schemas.unset,
        fan_status_error: typing.Union[MetaOapg.properties.fan_status_error, str, schemas.Unset] = schemas.unset,
        fan_total: typing.Union[MetaOapg.properties.fan_total, str, schemas.Unset] = schemas.unset,
        fan_units: typing.Union[MetaOapg.properties.fan_units, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqWiredDeviceHealthFanStatusResponseEntry':
        return super().__new__(
            cls,
            *_args,
            slot_number=slot_number,
            fan_status_error=fan_status_error,
            fan_total=fan_total,
            fan_units=fan_units,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_wired_device_health_fan_status import XiqWiredDeviceHealthFanStatus
