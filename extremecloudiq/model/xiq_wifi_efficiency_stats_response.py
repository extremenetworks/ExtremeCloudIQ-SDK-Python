# coding: utf-8

"""
    ExtremeCloud IQ API

    ExtremeCloud IQ RESTful API for external and internal applications.  # noqa: E501

    The version of the OpenAPI document: 25.2.0.123
    Contact: support@extremenetworks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from extremecloudiq import schemas  # noqa: F401


class XiqWifiEfficiencyStatsResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Copilot Wifi Efficiency Stats
    """


    class MetaOapg:
        
        class properties:
            total_client_sessions = schemas.Int64Schema
            show_tx_data = schemas.BoolSchema
            
            
            class sessions_data(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['XiqSessionsDataEntity']:
                        return XiqSessionsDataEntity
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['XiqSessionsDataEntity'], typing.List['XiqSessionsDataEntity']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'sessions_data':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'XiqSessionsDataEntity':
                    return super().__getitem__(i)
            __annotations__ = {
                "total_client_sessions": total_client_sessions,
                "show_tx_data": show_tx_data,
                "sessions_data": sessions_data,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_client_sessions"]) -> MetaOapg.properties.total_client_sessions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["show_tx_data"]) -> MetaOapg.properties.show_tx_data: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sessions_data"]) -> MetaOapg.properties.sessions_data: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["total_client_sessions", "show_tx_data", "sessions_data", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_client_sessions"]) -> typing.Union[MetaOapg.properties.total_client_sessions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["show_tx_data"]) -> typing.Union[MetaOapg.properties.show_tx_data, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sessions_data"]) -> typing.Union[MetaOapg.properties.sessions_data, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["total_client_sessions", "show_tx_data", "sessions_data", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        total_client_sessions: typing.Union[MetaOapg.properties.total_client_sessions, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        show_tx_data: typing.Union[MetaOapg.properties.show_tx_data, bool, schemas.Unset] = schemas.unset,
        sessions_data: typing.Union[MetaOapg.properties.sessions_data, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'XiqWifiEfficiencyStatsResponse':
        return super().__new__(
            cls,
            *_args,
            total_client_sessions=total_client_sessions,
            show_tx_data=show_tx_data,
            sessions_data=sessions_data,
            _configuration=_configuration,
            **kwargs,
        )

from extremecloudiq.model.xiq_sessions_data_entity import XiqSessionsDataEntity
